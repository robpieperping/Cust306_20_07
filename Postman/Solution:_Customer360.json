{
  "info": {
    "_postman_id": "db8d4e38-b4d7-4179-a2c0-7eedb03a524e",
    "name": "Solution - Customer360 (v1.3.2)",
    "description": "The Customer360 Solution is a combination of a set of API-injected Use Cases, and the Customer360 Solution stack (https://github.com/pingidentity/Customer360)\n\nThis collection combines the following Use Cases:\n\n* PD - Baseline\n* PF - Initial\n* PF - CIAM\n* PF - Add Sample Apps\n* PC - Initial\n* PDS - PD Destination\n\nVersion 1.3.2 - 5/19/2020\n* Switched SDK Connector to Email Primary to avoid trial tenant limitations\n* Resolved PingDataSync default connection\n\nVersion 1.3.1 - 5/12/2020\n* Replaced `Server if Up` detection to reduce the `AssertionError` count\n* Checks PF Version to create the proper API Admin Account Roles for v10.1+\n* `Create PID SDK Email Template` should now work correctly\n* Added links to PF Admin Guide\n\nVersion 1.3 - 4/24/2020\n* Added pre-population of Social into Account Registration\n* Added `payload` to Tracked HTTP Parameters (for PID SDK Apps)\n* Added PingDataSync - PD Destination\n\n\nVersion 1.2 - 4/20/2020\n* Added PingCentral calls\n* Added `Internal` AuthN flow to PF - supports internal-facing (i.e. PingCentral) logons where LIPs are not needed\n\nVersion 1.1 - 4/10/2020\n* PF Server Profile updated to include:\n * Google Adapter\n * Facebook Adapter\n * Apple Adapter\n * LinkedIn Adapter\n * Reference Adapter (1.5.1 --> 1.5.4)\n* Collection updated to include:\n * Enabled QR-Code in PID SDK Adapter\n * Added Google Adapter (`googleAppId` \\ `googleAppSecret` in Variables)\n * Added FB Adapter (`fbAppId` \\ `fbAppSecret` in Variables)\n * Added Policy Actions for FB \\ Google \\ QR Code\n  * AuthN Policy\n  * Fallback Policy\n\nVersion 1.0 - 3/13/2020\n* Initial Publish",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "PD - Baseline",
      "item": [
        {
          "name": "Check PD is Running",
          "item": [
            {
              "name": "Check if PD is up",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a7864a9-1358-402a-b81d-bcc6da8044ff",
                    "exec": [
                      "// Only perform the Test if a Status \"200\" returned",
                      "// Then continue with the collection",
                      "if (pm.response.code === 200) {",
                      "    pm.test(\"BaseDN retrieved\", function () {",
                      "        pm.response.to.have.jsonBody(\"publicBaseDNs\");",
                      "",
                      "        var response = pm.response.json();",
                      "        pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0]);",
                      "        postman.setNextRequest(\"00-Start-PD-Base\");",
                      "    });",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f9e66381-07f9-487a-b8e4-f97b5521bef7",
                    "exec": [
                      "// Tells Newman to repeat this call",
                      "postman.setNextRequest(pm.info.requestName);",
                      "// Puts a 15 sec delay into this call",
                      "setTimeout(function () {",
                      "    console.log(\"Connecting to PD: \", pm.variables.get(\"pdAdminUrl\"));",
                      "}, 15000);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "ab576fa6-b8e3-46b1-aaf6-31315451a487",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "{{pdAdmin}}",
                    "password": "{{pdAdminPwd}}"
                  }
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pdAdminUrl}}/directory/v1/",
                "description": "Uses the API endpoint instead of just the heartbeat"
              },
              "response": []
            },
            {
              "name": "00-Start-PD-Base",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cd64bf84-50d5-4ada-aec9-ff1d52f0c5cb",
                    "exec": [
                      "pm.test(\"Starting Collection\", function () {",
                      "    pm.response.to.be.status(302);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "3ef82a69-6e36-450e-b22a-9d751ece708f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com"
              },
              "response": []
            }
          ],
          "_postman_id": "0b64825c-39de-4a5d-aa0c-460f7e26e3eb",
          "description": "This folder contains the call that's used to wait until a desired condition is met.\n\nThe `Pre-request` of the call contains a log event with a timer of 30s. The `Test Script` of the call contains the loop back to this call, and the Condition test that will break the looping.\n\nThe name of the call for the break is `00-Start-PD-Base` -- it's a simple GET request to https://postman-echo.com and allows for this to be always consistent.\n\nThe actual set of API calls for this collection are started right after this GET call.",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "263d6b60-7de9-4ff9-850e-1838ee21a6a3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ba5aaee1-d75e-4fca-8667-8ff592b34ad4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Service Configuration",
          "item": [
            {
              "name": "00-debug-logging",
              "item": [
                {
                  "name": "Enable Log Publisher",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "03038016-c1e1-4556-bab7-f71f930406d0",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "6f26db0f-907a-43ea-a159-3096584b90d9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"true\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/log-publishers/File-Based Debug Logger"
                  },
                  "response": []
                },
                {
                  "name": "Add Debug Target - Replication ",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0a98cdfb-216c-420f-89e3-ee8b0993752e",
                        "exec": [
                          "pm.test(\"Debug Target Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "bd043450-89c0-46c7-b690-530ad13011ea",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:debug-target\" ],\n  \"debugLevel\" : \"verbose\",\n  \"targetName\" : \"com.unboundid.guitools.replicationcli\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/log-publishers/File-Based%20Debug%20Logger/debug-targets"
                  },
                  "response": []
                }
              ],
              "_postman_id": "c528f4e8-4d4a-452a-942d-d5839fb218f9",
              "_postman_isSubFolder": true
            },
            {
              "name": "01-remove-console-docs",
              "item": [
                {
                  "name": "Configure HTTPS Connection Handler",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "94340d72-9f91-4ae7-918f-8ca59b012eb4",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "40969a94-0d7f-4478-83ba-7ada634446ca",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"httpServletExtension\" : [ \"Available or Degraded State\", \"Available State\", \"Configuration\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/connection-handlers/HTTPS%20Connection%20Handler"
                  },
                  "response": []
                }
              ],
              "_postman_id": "89ca20d5-e15c-47fc-a33c-86dee1a6c7b9",
              "_postman_isSubFolder": true
            },
            {
              "name": "10-gauges",
              "item": [
                {
                  "name": "CPU Usage (Percent)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "388979c3-66e6-4cde-bfaa-d11f4bd85a3d",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c175faef-e3ce-466d-8d28-ffb9d8c80ddc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"false\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/gauges/CPU%20Usage%20(Percent)"
                  },
                  "response": []
                },
                {
                  "name": "License Expiration (Days)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c604fcb6-5ae0-4b04-ba72-331748aec4a0",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8bee13e9-c267-4712-a469-813d2bb5e117",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"false\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/gauges/License%20Expiration%20(Days)"
                  },
                  "response": []
                },
                {
                  "name": "Available File Descriptors",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e466a10f-d33b-425e-8f59-a6879ac8d837",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b3766927-7ba8-4cc1-86a8-ecca0c7bd365",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"false\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/gauges/Available%20File%20Descriptors"
                  },
                  "response": []
                }
              ],
              "_postman_id": "9937ba09-62d8-4e50-a2c0-52e32f7bfafa",
              "_postman_isSubFolder": true
            },
            {
              "name": "10-log-publishers",
              "item": [
                {
                  "name": "Data Recovery Log",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "84d63763-e2b5-40ee-ac57-1db1c586122c",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "75f5bfbb-890c-44ba-a590-6f0841afc9d1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"false\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/log-publishers/Data%20Recovery%20Log"
                  },
                  "response": []
                }
              ],
              "_postman_id": "eea9e02c-3168-4ebe-a74c-0c4697bc33d4",
              "_postman_isSubFolder": true
            },
            {
              "name": "10-RootDNs",
              "item": [
                {
                  "name": "Add Alt DN to DManager",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "be53a3e0-8c48-4e7d-9cd3-cb32c179fa36",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "2b22b189-5635-4eda-af12-aca064d89d1d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"operations\": [\n        {\n            \"path\": \"alternateBindDN\",\n            \"op\": \"add\",\n            \"value\": \"cn=administrator\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/root-dn/root-dn-users/Directory%20Manager"
                  },
                  "response": []
                },
                {
                  "name": "Add DataSync User",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e8d8eb7b-b6da-4249-a612-3689f2129c20",
                        "exec": [
                          "pm.test(\"DataSync RootDN Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e7d3634d-7523-42c5-a4a8-8c782279d3ab",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:user\" ],\n  \"alternateBindDN\" : [ \"cn=datasync\", \"cn=sync\" ],\n  \"password\" : \"{{pdAdminPwd}}\",\n  \"inheritDefaultRootPrivileges\" : \"false\",\n  \"privilege\" : [ \"bypass-acl\", \"bypass-pw-policy\", \"config-read\", \"password-reset\", \"unindexed-search\" ],\n  \"userName\" : \"pingdatasync\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/root-dn/root-dn-users"
                  },
                  "response": []
                },
                {
                  "name": "Add PingFederate",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9b85ed00-31b6-45bb-beba-4eaff95b2062",
                        "exec": [
                          "pm.test(\"PingFederate RootDN Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "12e96e10-7fdd-4f13-affe-73d884dd619d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:user\" ],\n  \"alternateBindDN\" : [ \"cn=fed\", \"cn=pf\", \"cn=pingfederate\" ],\n  \"password\" : \"{{pfAdminPwd}}\",\n  \"inheritDefaultRootPrivileges\" : \"false\",\n  \"privilege\" : [ \"config-read\", \"password-reset\", \"permit-get-password-policy-state-issues\", \"proxied-auth\", \"unindexed-search\" ],\n  \"isProxyable\" : \"prohibited\",\n  \"userName\" : \"pingfederate\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/root-dn/root-dn-users"
                  },
                  "response": []
                }
              ],
              "_postman_id": "84282d9e-77b5-4065-89a5-a8314382a94e",
              "_postman_isSubFolder": true
            },
            {
              "name": "11-changelog",
              "item": [
                {
                  "name": "Allow changelog in Sync",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "32445efc-8c13-4366-9eff-3c11269f7a1d",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f5d22e80-f8c3-40d4-8218-ff628ab3f482",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"changelogMaximumAge\": \"2 h\",\n    \"enabled\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/changelog"
                  },
                  "response": []
                }
              ],
              "_postman_id": "6bb4ab75-984a-4027-8889-901c13e6906e",
              "_postman_isSubFolder": true
            },
            {
              "name": "12-indexes",
              "item": [
                {
                  "name": "pf-connected-identity",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6df83981-fb3a-4eca-82b4-2e0f99d495f1",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "245ee8d8-f010-4b6a-a64c-22eae679e5df",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"pf-connected-identity\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "pf-oauth-client-id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0d550d52-78f8-4a1c-9c44-93046f5a93a1",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a854daaf-c28c-4b4a-8fa0-c9a6f0355f68",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : [ \"equality\", \"ordering\", \"substring\" ],\n  \"indexName\" : \"pf-oauth-client-id\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "pf-oauth-client-name",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5daf6ca0-01ff-4b90-98b8-1ec4164d5d15",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "82958378-35dc-4eec-8b57-3d6e49290536",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : [ \"equality\", \"ordering\", \"substring\" ],\n  \"indexName\" : \"pf-oauth-client-name\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "pf-oauth-client-last-modified",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "282ab4ca-3b66-4122-9fc3-f3f6ce071f40",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "507b40e7-a335-48d5-90e7-0bafdea558e7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"ordering\",\n  \"indexName\" : \"pf-oauth-client-last-modified\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantClientId",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1a335cf3-e73f-4cf2-9193-0ed1502af7fb",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e39e3c37-31de-4db7-9f50-dbbe5ce7f21b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"accessGrantClientId\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantUniqueUserIdentifier",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8edeaf5e-d894-4ab7-99a9-e7f1997403d9",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f97a8d6d-ec46-4b1d-b5bd-25bfee5e7517",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"accessGrantUniqueUserIdentifier\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantGuid",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c237670b-62a9-4b89-9ca7-9372a91a1fe1",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "0ccb3046-c082-412c-849c-6526291ad120",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"accessGrantGuid\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantHashedRefreshTokenValue",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b51a58ea-2d31-4ee4-99d6-bf2faaf3b67e",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ec01a920-bef9-430f-b6d5-cf8ed66e21be",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"accessGrantHashedRefreshTokenValue\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantExpires",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "95ec731c-8214-4f2c-9a8f-647a664932c5",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "75acec71-b0af-4d29-9b6e-71ab6b307793",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"ordering\",\n  \"indexName\" : \"accessGrantExpires\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                }
              ],
              "_postman_id": "0c07fa1d-9284-45a5-ba3d-1acb1d195028",
              "_postman_isSubFolder": true
            },
            {
              "name": "13-global-acis",
              "item": [
                {
                  "name": "Global ACIs - PingFederate",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "66547205-4b1f-4b2f-8980-d5a379d672f8",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "90412219-be78-47df-83b8-8e5733879976",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"operations\": [\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(targetcontrol=\\\"1.2.840.113556.1.4.319\\\")(version 3.0; acl \\\"Allow paging for pingfederate\\\"; allow (read) userdn=\\\"ldap:///cn=pingfederate,cn=Root DNs,cn=config\\\";)\"\n        },\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(targetcontrol=\\\"1.2.840.113556.1.4.473\\\")(version 3.0; acl \\\"Allow Server Sort for pingfederate\\\"; allow (read) userdn=\\\"ldap:///cn=pingfederate,cn=Root DNs,cn=config\\\";)\"\n        },\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(targetcontrol=\\\"1.3.6.1.1.13.2\\\")(version 3.0; acl \\\"Anonymous access to the post-read request control as described in RFC 4527\\\"; allow (read) userdn=\\\"ldap:///anyone\\\";)\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/access-control-handler",
                    "description": "{\n            \"path\": \"[ globalACI eq \\\"(targetattr=\\\"userPassword || authPassword\\\")(version 3.0; acl \\\"Prevent clients from retrieving passwords from the server\\\"; deny (read,search,compare) userdn=\\\"ldap:///anyone\\\";)\\\" ]\",\n            \"op\": \"remove\"\n        }"
                  },
                  "response": []
                }
              ],
              "_postman_id": "c04a4e34-a6c4-4051-a958-4b9ed56659de",
              "_postman_isSubFolder": true
            },
            {
              "name": "20-plug-in",
              "item": [
                {
                  "name": "Create Plug-In - ExpiredSessionAutoPurge",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9440d5a6-51d7-49dd-a06b-ec0fd490df49",
                        "exec": [
                          "pm.test(\"Plug-In Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3c7cec9b-0aeb-472a-a648-0f02e39cccfe",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data\" ],\n  \"enabled\" : \"true\",\n  \"datetimeAttribute\" : \"pf-authn-session-group-expiry-time\",\n  \"expirationOffset\" : \"1 h\",\n  \"purgeBehavior\" : \"subtree-delete-entries\",\n  \"baseDN\" : \"ou=sessions,{{userBaseDN}}\",\n  \"filter\" : \"(objectClass=pf-authn-session-groups)\",\n  \"pollingInterval\" : \"20 m\",\n  \"pluginName\" : \"ExpiredSessionAutoPurge\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/plugin-root/plugins"
                  },
                  "response": []
                },
                {
                  "name": "Create Plug-In - IdleSessionAutoPurge",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e5e6975-5cea-4058-b880-5f356588137d",
                        "exec": [
                          "pm.test(\"Plug-In Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1ea35ac0-cd89-40cf-84a5-f68e68af67b8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data\" ],\n  \"enabled\" : \"true\",\n  \"datetimeAttribute\" : \"pf-authn-session-group-last-activity-time\",\n  \"expirationOffset\" : \"1 w\",\n  \"purgeBehavior\" : \"subtree-delete-entries\",\n  \"baseDN\" : \"ou=sessions,{{userBaseDN}}\",\n  \"filter\" : \"(objectClass=pf-authn-session-groups)\",\n  \"pollingInterval\" : \"1 d\",\n  \"pluginName\" : \"IdleSessionAutoPurge\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/plugin-root/plugins"
                  },
                  "response": []
                }
              ],
              "_postman_id": "b2d01eaa-686b-42de-83ff-b883cec4ec11",
              "_postman_isSubFolder": true
            },
            {
              "name": "77-tuning",
              "item": [
                {
                  "name": "Compact common parent DN",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b17960d3-d5ef-4983-9f63-e10f8b578c59",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3d8b4307-7d32-40b5-b277-0d4f5c75c129",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"compactCommonParentDN\": \"ou=People,{{userBaseDN}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot"
                  },
                  "response": []
                }
              ],
              "_postman_id": "2f1d2d7a-743b-4c19-86aa-239c2df72925",
              "_postman_isSubFolder": true
            },
            {
              "name": "Add HTTPS Connection Handler",
              "item": [
                {
                  "name": "Add Delegated Admin to Connection Handler Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f51e0e02-f1a9-4a2c-861c-e12319ae9538",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "52bc784a-0112-42a9-81bf-08f81df0d6e9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:connection-handler:http\"\n    ],\n    \"id\": \"HTTPS Connection Handler - PD Services\",\n    \"meta\": {\n        \"resourceType\": \"HTTP Connection Handler\"\n    },\n    \"acceptBacklog\": 128,\n    \"allowTCPReuseAddress\": true,\n    \"correlationIDRequestHeader\": [\n        \"Correlation-Id\",\n        \"X-Correlation-Id\",\n        \"X-CorrelationID\",\n        \"X-MS-Correlation-Id\",\n        \"X-Request-Id\",\n        \"X-Amzn-Trace\"\n    ],\n    \"correlationIDResponseHeader\": \"Correlation-Id\",\n    \"enableMultipartMIMEParameters\": false,\n    \"enabled\": true,\n    \"handlerName\": \"HTTPS Connection Handler - PD Services\",\n    \"httpOperationLogPublisher\": [\n        \"HTTP Detailed Access\"\n    ],\n    \"httpRequestHeaderSize\": 8192,\n    \"httpServletExtension\": [\n        \"Consent\",\n        \"Delegated Admin\",\n        \"Directory REST API\",\n        \"SCIM2\"\n    ],\n    \"idleTimeLimit\": \"3 m 20 s\",\n    \"keepStats\": true,\n    \"keyManagerProvider\": \"JKS\",\n    \"listenPort\": 2443,\n    \"lowResourcesConnectionThreshold\": 0,\n    \"lowResourcesIdleTimeLimit\": \"3 m 20 s\",\n    \"numRequestHandlers\": 0,\n    \"sslCertNickname\": \"server-cert\",\n    \"trustManagerProvider\": \"JKS\",\n    \"useCorrelationIDHeader\": true,\n    \"useForwardedHeaders\": false,\n    \"useSSL\": true,\n    \"webApplicationExtension\": [\n        \"Console\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/connection-handlers"
                  },
                  "response": []
                }
              ],
              "_postman_id": "2652faf1-67f3-4bfb-98ce-16da50854aea",
              "description": "Not part of GTE -- these calls are to create a new HTTPS Connection Handler that can be used by things other than the ConfigAPI.\n\nThis will allow changes to be made to the Handler in the ConfigAPI and allow the API to restart it",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "f5bc2943-eb8c-47a6-b1c4-6dff049addb0",
          "description": "Contains the ConfigAPI calls to mimic GTE Baseline",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "3f38ee52-1bf4-4a85-a158-550b309deeb8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ebe27d8f-ff6a-49b8-96c3-8f9a1219debe",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Data Configuration",
          "item": [
            {
              "name": "Configure BaseDN",
              "item": [
                {
                  "name": "Replace ACIs",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "caf8d489-4fab-46d2-8184-bc3f16194d72",
                        "exec": [
                          "pm.test(\"Default ACIs Created\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8e561ef5-b772-4faf-b099-23a878e2d6e1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"modifications\": [\n        {\n            \"attributeName\": \"aci\",\n            \"modificationType\": \"set\",\n            \"values\": [\n                \"(targetattr=\\\"userPassword\\\")(version 3.0; acl \\\"Allow users to update their own password\\\"; allow (write) userdn=\\\"ldap:///self\\\";)\",\n                \"(version 3.0; acl \\\"PingFed Proxy Access\\\"; allow(proxy) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetattr!=\\\"userPassword\\\")(version 3.0; acl \\\"Allow the pingfederate user to do everything in this branch\\\"; allow(all) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetattr=\\\"userPassword\\\")(version 3.0; acl \\\"Allow the pingfederate user to update passwords\\\"; allow (write) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetattr=\\\"isMemberOf\\\")(version 3.0; acl \\\"Allow the pingfederate user to get memberships\\\"; allow (read) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetcontrol=\\\"1.3.6.1.4.1.42.2.27.9.5.8\\\")(version 3.0; acl \\\"Access to the Account Usability Control\\\"; allow (read) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetcontrol=\\\"1.3.6.1.4.1.30221.2.5.40\\\")(version 3.0; acl \\\"Access to the Password Validation Details Request Control\\\"; allow (read) userdn=\\\"ldap:///{{userBaseDN}}\\\";)\"\n            ]\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/{{userBaseDN}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "5a7e95c8-f28e-4438-924c-ecc6233574a5",
              "_postman_isSubFolder": true
            },
            {
              "name": "Add Initial OUs",
              "item": [
                {
                  "name": "Create People OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f51e0e02-f1a9-4a2c-861c-e12319ae9538",
                        "exec": [
                          "pm.test(\"ou=People Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "930984fb-7beb-40bd-90c2-08d5df1134bd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create Groups OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "51b782a2-a4e6-4b70-b185-e65a9557da79",
                        "exec": [
                          "pm.test(\"ou=Groups Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8445be56-39f6-4e56-ba67-35537629ff27",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=Groups,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create Consents OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9a61c67-2a8a-4a70-b521-98baba611058",
                        "exec": [
                          "pm.test(\"ou=Consents Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1d8ac9dd-918e-4f96-b2f0-bcd6cc06acf4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=Consents,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create oauthClients OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aa211317-febb-4a0c-843e-7a8938e7c41e",
                        "exec": [
                          "pm.test(\"ou=oauthClients Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4fc6aea4-eb31-4aff-856c-e0f3fb5af7c8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=oauthClients,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create grants OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c3c96226-2742-466a-85a7-11606845749e",
                        "exec": [
                          "pm.test(\"ou=grants Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "82f90de0-850a-452f-9648-47cfbf2114bf",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=grants,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create sessions OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "89f43827-7a3d-4442-aec7-4ed7a6723bcb",
                        "exec": [
                          "pm.test(\"ou=Sessions Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "03a38d91-8d40-4133-a3a7-b2307fc973d4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=sessions,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                }
              ],
              "_postman_id": "1a4c7345-c23e-486a-a6d0-1d36cd2f9105",
              "description": " Create OUs for:\n * Consents\n * Groups\n * Grants\n * OAuthClients\n * People\n * Sessions",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9f3750f6-e094-45a8-bd87-071c709c6b4c",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d2d2042f-dc8f-4c27-9465-e285f5e9b19b",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Add Initial Users (Services)",
              "item": [
                {
                  "name": "Create PF Administrator account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a8c8501a-ebc2-4f36-97cc-89624f2663da",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9e877975-eda8-4691-8c23-9b1acce4fb0a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=administrator,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"PingFederate\" ],\n\t\"cn\": [ \"administrator\" ],\n\t\"givenName\": [ \"Administrator\" ],\n\t\"uid\": [ \"administrator\" ],\n\t\"userPassword\": [ \"2FederateM0re\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=administrator\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create PF Auditor account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3bb84454-0daf-48aa-afb6-e949db74498e",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3dbeb3e8-7dde-4ba8-8252-3f6d330abd8d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=auditor,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"PingFederate\" ],\n\t\"cn\": [ \"auditor\" ],\n\t\"givenName\": [ \"Auditor\" ],\n\t\"uid\": [ \"auditor\" ],\n\t\"userPassword\": [ \"2FederateM0re\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=auditor\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create PA account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f469e2ec-1cbf-45b9-8aa1-b6c336dd6f51",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=access2federate,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"PingAccess\" ],\n\t\"cn\": [ \"pingFederateAdministrator\" ],\n\t\"givenName\": [ \"PingAccess\" ],\n\t\"uid\": [ \"access2federate\" ],\n\t\"userPassword\": [ \"2FederateM0re\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=access2federate\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - PFAdminGroup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "65e33e17-50e4-4a1f-bc92-08988542fad5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"_dn\": \"cn=PFAdminGroup,ou=Groups,{{userBaseDN}}\",\n    \"objectClass\": [\n        \"groupOfNames\"\n    ],\n    \"cn\": [\n        \"PFAdminGroup\"\n    ],\n    \"member\": [\n        \"uid=administrator,ou=People,{{userBaseDN}}\",\n        \"uid=access2federate,ou=People,{{userBaseDN}}\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - PFCryptoGroup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b9a655a2-52cc-4046-81d2-1a1edd780c6a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"_dn\": \"cn=PFCryptoGroup,ou=Groups,{{userBaseDN}}\",\n    \"objectClass\": [\n        \"groupOfNames\"\n    ],\n    \"cn\": [\n        \"PFCryptoGroup\"\n    ],\n    \"member\": [\n        \"uid=administrator,ou=People,{{userBaseDN}}\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - PFAuditorGroup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "65734ef7-c200-4a52-8657-2c959b32a222",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"_dn\": \"cn=PFAuditorGroup,ou=Groups,{{userBaseDN}}\",\n    \"objectClass\": [\n        \"groupOfNames\"\n    ],\n    \"cn\": [\n        \"PFAuditorGroup\"\n    ],\n    \"member\": [\n        \"uid=auditor,ou=People,{{userBaseDN}}\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - PFUserAdminGroup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "be063a66-a49f-44f2-a581-4cbe8df716f3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"_dn\": \"cn=PFUserAdminGroup,ou=Groups,{{userBaseDN}}\",\n    \"objectClass\": [\n        \"groupOfNames\"\n    ],\n    \"cn\": [\n        \"PFUserAdminGroup\"\n    ],\n    \"member\": [\n        \"uid=administrator,ou=People,{{userBaseDN}}\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                }
              ],
              "_postman_id": "85b44b65-f7c0-4b91-a0ea-e0f20a51e3d9",
              "description": "Service Accounts \\ Groups: \n* PF Administrator (PF Console)\n* PF Auditor (PF Console)\n* PA Account (Why does GTE do this??)\n* Group - PFAdminGroup (mapped in PF `ldap.properties`)\n* Group - PFAuditorGroup (mapped in PF `ldap.properties`)\n* Group - PFCryptoGroup (mapped in PF `ldap.properties`)\n* Group - PFUserAdminGroup (mapped in PF `ldap.properties`)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1c7a77f5-801c-4ef4-a047-930e1a4dbf06",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "270b95e4-8d84-42d4-9b80-584882356400",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Add Initial Users (Users)",
              "item": [
                {
                  "name": "Create user.0 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4e3ce5c6-4805-4325-8079-5c5f7ce9c980",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.0,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.0\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"mail\": [ \"user.0@mailinator.com\" ],\n\t\"uid\": [ \"user.0\" ],\n\t\"userPassword\": [ \"2FederateM0re\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.0\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create user.1 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "0734e2b6-5889-43f0-bb4b-53e376b5a071",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.1,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.1\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"uid\": [ \"user.1\" ],\n\t\"userPassword\": [ \"2FederateM0re\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.1\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create user.2 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ea4617f1-659f-4533-973a-51e7f5eccae1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.2,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.2\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"uid\": [ \"user.2\" ],\n\t\"userPassword\": [ \"2FederateM0re\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.2\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create user.3 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c7afbf39-e221-4968-9ef7-c8edeab12d1d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.3,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.3\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"uid\": [ \"user.3\" ],\n\t\"userPassword\": [ \"2FederateM0re\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.3\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create user.4 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a22f59e9-fe12-4f8a-8f91-e0bb45c8de4a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.4,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.4\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"uid\": [ \"user.4\" ],\n\t\"userPassword\": [ \"2FederateM0re\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.4\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - group.0",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c88f04ca-204e-4b90-ba52-1f65a4d1f61b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"cn=group.0,ou=Groups,{{userBaseDN}}\",\n\t\"objectClass\": [ \"groupOfNames\" ],\n\t\"cn\": [ \"group.0\" ],\n\t\"member\": [\"uid=user.0,ou=people,{{userBaseDN}}\"]\n}\n",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                }
              ],
              "_postman_id": "40196c28-a996-4c2e-8be5-b072eec37d5c",
              "description": "Users \\ Groups for AuthN:\n* User.[0-4]\n* Group.0",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e70d91fd-ed73-40d4-b5a5-569465ab3ba6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "9efdf51c-dc48-4338-9e4f-0f2bdf440f67",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "acc89db3-d39f-42ce-98b2-4fa0068d5399",
          "description": "Contains the DirectoryAPI calls to create the data for OUs and Users:\n\n* Configures `userBaseDN` ACIs to support PF Self-Service Reset and PD Delegated Admin\n* Creates Default OUs\n* Creates Service Users and Groups\n* Creates Users and Groups",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "feb05921-bffe-4a8f-854e-10edab99a322",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2cb96c4e-9f89-4850-b0c6-1663e497d8d7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "e9cf0b3a-1635-4070-aa10-47a0b1740ead",
      "description": "These calls mimic what GTE Baseline - PingDirectory does with `dsconfig` and ldif imports.\n\nAnything that can be done via an API (Config or Dir) are here.\n\nPD Server Profile only needs the schema folder.",
      "auth": {
        "type": "basic",
        "basic": {
          "password": "{{pdAdminPwd}}",
          "username": "{{pdAdmin}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "0f26d3f1-7470-4ede-bfab-2b5ef7b1432e",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "3b3541db-d25e-4f3e-a882-fc4f05c6aecf",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "PF - Initial",
      "item": [
        {
          "name": "Check PF is Running",
          "item": [
            {
              "name": "Start PF Config",
              "item": [],
              "_postman_id": "fb4e2901-00ac-4d25-8635-07cb2fb6e8ed",
              "_postman_isSubFolder": true
            },
            {
              "name": "Check if PF is up",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a7864a9-1358-402a-b81d-bcc6da8044ff",
                    "exec": [
                      "// Checks to see if the server actually responded",
                      "if (pm.response.code === 200) {",
                      "    pm.test(\"Server is Up\", function () {",
                      "        pm.response.to.be.ok;",
                      "        postman.setNextRequest(\"00-Start-PF-Base\");",
                      "    });",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f9e66381-07f9-487a-b8e4-f97b5521bef7",
                    "exec": [
                      "// Tells Newman to repeat this call",
                      "postman.setNextRequest(pm.info.requestName);",
                      "// Puts a 10 sec delay into this call",
                      "setTimeout(function () {",
                      "    console.log(\"Connecting to PF: \", pm.variables.get(\"pfAdminURL\"));",
                      "}, 10000);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b9db8415-df64-43c9-8e69-00280b2d1c4b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/license/agreement",
                "description": "Uses the API endpoint instead of just the heartbeat"
              },
              "response": []
            },
            {
              "name": "00-Start-PF-Base",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cd64bf84-50d5-4ada-aec9-ff1d52f0c5cb",
                    "exec": [
                      "pm.test(\"Starting Collection\", function () {",
                      "    pm.response.to.be.status(302);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "ac3f319e-6f15-43ad-b305-798e391cbf09",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com"
              },
              "response": []
            }
          ],
          "_postman_id": "3e60538d-8d3a-4ac1-811e-7efd2bc3c2ae",
          "description": "This folder contains the call that's used to wait until a desired condition is met.\n\nThe `Pre-request` of the call contains a log event with a timer of 30s. The `Test Script` of the call contains the loop back to this call, and the Condition test that will break the looping.\n\nThe name of the call for the break is `00-Start-PF-Base` -- it's a simple GET request to https://postman-echo.com and allows for this to be always consistent.\n\nThe actual set of API calls for this collection are started right after this GET call.",
          "auth": {
            "type": "noauth"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "263d6b60-7de9-4ff9-850e-1838ee21a6a3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ba5aaee1-d75e-4fca-8667-8ff592b34ad4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Initial Server Config",
          "item": [
            {
              "name": "Start PF Config",
              "item": [
                {
                  "name": "Get BaseDN from PD",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b84ada5d-f877-48d8-b818-e8b18dcb4155",
                        "exec": [
                          "pm.test(\"BaseDN retrieved\", function () {",
                          "    pm.response.to.be.ok;",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0])",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "93026fbc-e10a-427a-b856-e00f5d732f13",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": {
                        "password": "{{pdAdminPwd}}",
                        "username": "{{pdAdmin}}"
                      }
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1",
                    "description": "Gets the `userbaseDN` that was used to create the PD instance"
                  },
                  "response": []
                },
                {
                  "name": "Accept EULA",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "04f559ef-34fc-4ab3-9a8f-1b7fd36d993c",
                        "exec": [
                          "pm.test(\"EULA Accepted\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8a33103a-a052-4fec-bc71-76e2b2df2e5c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"accepted\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/license/agreement"
                  },
                  "response": []
                }
              ],
              "_postman_id": "d5459892-a037-4662-b5f8-ef3348d79a88",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create API Admin Account",
              "item": [
                {
                  "name": "Create initial API Admin Account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f99d64af-a643-4445-bcac-fe0d289c4817",
                        "exec": [
                          "pm.test(\"API Admin account created\", function () {",
                          "    pm.response.to.be.ok;",
                          "",
                          "    // `encryptedPassword` needed to Update Account Later",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"encryptedPassword\", response.encryptedPassword);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c3dcee24-7868-4ee4-9059-a3c76540096a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"username\": \"api-admin\",\n    \"password\": \"{{globalPwd}}\",\n    \"active\": \"true\",\n    \"description\": \"Used to perform Admin API calls\",\n    \"roles\": [\n        \"USER_ADMINISTRATOR\",\n        \"CRYPTO_ADMINISTRATOR\",\n        \"ADMINISTRATOR\"\n    ]\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/administrativeAccounts",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=uwm1564002973007.html"
                  },
                  "response": []
                },
                {
                  "name": "Check Version",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "658bc902-9b44-4609-a0dd-90eb8fcd13f2",
                        "exec": [
                          "pm.test(\"Version retrieved\", function () {",
                          "    pm.response.to.be.ok;",
                          "    var response = pm.response.json();",
                          "",
                          "    // Split the Version into numbers",
                          "    var version = response.version.split(\".\");",
                          "    var major = parseInt(version[0]);",
                          "    var minor = parseInt(version[1]);",
                          "    // Combine into a single number (makes the comparison easier)",
                          "    var currentVersion = Number(major + minor / 10);",
                          "",
                          "    // Check to see if EXPRESSION_ADMIN is needed (v10.1+)",
                          "    if (currentVersion >= 10.1) {",
                          "        console.log(\"PF v10.1+ Detected\");",
                          "        var pfAdminRoles = \"[ \\\"USER_ADMINISTRATOR\\\", \\\"CRYPTO_ADMINISTRATOR\\\", \\\"ADMINISTRATOR\\\", \\\"EXPRESSION_ADMINISTRATOR\\\" ]\";",
                          "    }",
                          "    else {",
                          "        var pfAdminRoles = \"[ \\\"USER_ADMINISTRATOR\\\", \\\"CRYPTO_ADMINISTRATOR\\\", \\\"ADMINISTRATOR\\\" ]\";",
                          "    }",
                          "    pm.environment.set(\"pfAdminRoles\", pfAdminRoles);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "89ccff7f-ca98-4ce0-908a-9c78aa49498b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/version",
                    "description": "Used to detect the running version of PF and makes version dependant changes. \nThere's a Test Script that performs the actions.\n\n* Admin Account Role: 10.1+ needs additional Role"
                  },
                  "response": []
                },
                {
                  "name": "Update API Admin Account with version Roles",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "64943454-33e2-4abe-a8a8-d6b8c0c12e53",
                        "exec": [
                          "pm.test(\"API Admin account created\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "61039849-8e9a-45f3-866d-29f8d235353a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"username\": \"{{pfAdmin}}\",\n    \"active\": \"true\",\n    \"description\": \"Used to perform Admin API calls\",\n    \"encryptedPassword\": \"{{encryptedPassword}}\",\n    \"roles\": {{pfAdminRoles}}\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/administrativeAccounts/{{pfAdmin}}",
                    "description": "PF 10.1+ adds a Role that is needed to use the `/config-store` API. \n\nThis call puts the right roles onto the created Admin account"
                  },
                  "response": []
                }
              ],
              "_postman_id": "9d05e0e2-dab5-4cdd-862e-37abf1c8ddf7",
              "description": "The Solution Profile assumes LDAP for the Admin Console, but the API changes need to be performed **after** PF has started. This means `native` is needed for the API - these calls create that account",
              "_postman_isSubFolder": true
            },
            {
              "name": "Finish Initial Config",
              "item": [
                {
                  "name": "Get License",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dad3bd03-a53e-472d-96ae-5dc8c7f52a29",
                        "exec": [
                          "pm.test(\"PF License retrieved\", function () {",
                          "    pm.response.to.be.ok;",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"wsTrustEnabled\", response.wsTrustEnabled);    ",
                          "    pm.environment.set(\"oauthEnabled\", response.oauthEnabled);",
                          "    pm.environment.set(\"provisioningEnabled\", response.provisioningEnabled);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "da7714e2-39a1-4a51-aff6-14c4da1fe87a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/license",
                    "description": "Used to configure Server Roles that match the license"
                  },
                  "response": []
                },
                {
                  "name": "Server Settings",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "37cd23c7-5a5a-4834-bc81-9210b59a4074",
                        "exec": [
                          "pm.test(\"Server Settings Configured\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "a400b408-df00-44e0-91c1-a96af12aaa85",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e25228d0-89e7-4937-ac7b-64ccf0fb2891",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "PingFederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"contactInfo\": {\n    \"company\": \"PF Demo\"\n  },\n  \"rolesAndProtocols\": {\n    \"oauthRole\": {\n      \"enableOauth\": {{oauthEnabled}},\n      \"enableOpenIdConnect\": {{oauthEnabled}}\n    },\n    \"idpRole\": {\n      \"enable\": true,\n      \"saml20Profile\": {\n        \"enable\": true,\n        \"enableAutoConnect\": false\n      },\n      \"enableOutboundProvisioning\": {{provisioningEnabled}},\n      \"enableSaml11\": false,\n      \"enableSaml10\": false,\n      \"enableWsFed\": true,\n      \"enableWsTrust\": {{wsTrustEnabled}}\n    },\n    \"spRole\": {\n      \"enable\": true,\n      \"saml20Profile\": {\n        \"enable\": true,\n        \"enableXASP\": false,\n        \"enableAutoConnect\": false\n      },\n      \"enableSaml11\": false,\n      \"enableSaml10\": false,\n      \"enableWsFed\": false,\n      \"enableWsTrust\": false,\n      \"enableOpenIDConnect\": true,\n      \"enableInboundProvisioning\": false\n    },\n    \"enableIdpDiscovery\": false\n  },\n  \"federationInfo\": {\n    \"baseUrl\": \"{{pfBaseURL}}\",\n    \"saml2EntityId\": \"{{pfBaseURL}}\",\n    \"autoConnectEntityId\": \"{{pfBaseURL}}\",\n    \"saml1xIssuerId\": \"{{pfBaseURL}}\",\n    \"wsfedRealm\": \"{{pfBaseURL}}\"\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/serverSettings",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=vko1564002972919.html"
                  },
                  "response": []
                },
                {
                  "name": "Add Signing Cert",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f99d64af-a643-4445-bcac-fe0d289c4817",
                        "exec": [
                          "pm.test(\"Signing Cert created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c49a5a88-f2f8-4b02-b6ae-e79a0237165b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"signing-cert\",\n  \"commonName\": \"pingfederate\",\n  \"organization\": \"Ping Identity\",\n  \"country\": \"US\",\n  \"validDays\": \"1825\",\n  \"keyAlgorithm\": \"RSA\",\n  \"keySize\": \"2048\",\n  \"signatureAlgorithm\": \"SHA256withRSA\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/keyPairs/signing/generate",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=uci1564002984974.html"
                  },
                  "response": []
                },
                {
                  "name": "Create Extended Propery",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8b05293b-0945-4079-8094-f921b962ca35",
                        "exec": [
                          "pm.test(\"Extended Property Created\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "20c2c8e7-6917-4b34-9227-e7d46f2cc271",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"name\": \"authNexp\",\n      \"description\": \"Authentication Experience\",\n      \"multiValued\": \"false\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/extendedProperties",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=uut1564002974579.html"
                  },
                  "response": []
                },
                {
                  "name": "Add `pingfederate` as Virtual Host Name",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d2d7a1be-be2d-4600-9bd3-d0bb12edd3ed",
                        "exec": [
                          "pm.test(\"Virtual Host Created\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f56f542a-22c0-47ea-a5a3-f476be65d0e7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"virtualHostNames\": [\n    \"pingfederate\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/virtualHostNames",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=muj1564002974462.html\n\nThis is used to accept backchannel calls from other services in the stack"
                  },
                  "response": []
                }
              ],
              "_postman_id": "02f3713a-10e6-4e6b-974c-5b240e8c3c85",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "c3d4a217-0f3f-4f18-9e9d-b7c48abba791",
          "description": "This folder contains calls to do the initial configuration of the Server:\n\n* Accept the EULA\n* Add Admin account for API calls\n* Match the Roles & Protocols to the installed license\n* Add a Signing Certificate\n* Add Extended Property\n* Add Virtual Host for `pingfederate` to enable any backchannel calls\n",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2db108d5-3306-43e1-b2bc-a7f632d2dc32",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "f8c7d200-9864-40c6-9cea-6a7dc3ec2dc7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "System Config - Datastore \\ Config Store (PD) \\ PD PCV",
          "item": [
            {
              "name": "Create base DataStore",
              "item": [
                {
                  "name": "Add Datastore - PD",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "7c855f38-dfee-4e47-b7d8-7e230cd38dd3",
                        "exec": [
                          "pm.test(\"PD Datastore Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9e697390-2ea8-4759-8870-7c88dfbda825",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "PingFederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"type\": \"LDAP\",\n      \"id\": \"LDAP-PingDirectory\",\n      \"maskAttributeValues\": false,\n      \"hostnames\": [\n        \"pingdirectory\"\n      ],\n      \"ldapType\": \"PING_DIRECTORY\",\n      \"bindAnonymously\": false,\n      \"userDN\": \"cn=pingfederate\",\n\t  \"password\": \"{{pfAdminPwd}}\",\n      \"useSsl\": false,\n      \"useDnsSrvRecords\": false,\n      \"name\": \"PingDirectory\",\n      \"testOnBorrow\": false,\n      \"testOnReturn\": false,\n      \"createIfNecessary\": true\n    }",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/dataStores",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=obh1564002976555.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "04a3dfe2-fef0-4dee-a8f8-b4db58ae407e",
              "description": "Adds PD as a datastore",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "d92cd655-f7e1-4101-a792-4662801527fd",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "480361d3-2863-4eec-b6aa-5e753be5e7ee",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Config-Store API",
              "item": [
                {
                  "name": "Set PD for OAuth Clients",
                  "item": [
                    {
                      "name": "Set PD for OAuth Clients",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdd58167-fbbf-4eac-b0db-adb10cdda528",
                            "exec": [
                              "pm.test(\"OAuth Clients in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "e121c37d-223b-412c-a50e-abe7c63cd398",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "value": "pingfederate",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "    {\n      \"id\": \"PingFederateDSJNDIName\",\n      \"type\": \"STRING\",\n      \"stringValue\": \"LDAP-PingDirectory\"\n    }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.oauth20.domain.ClientManagerLdapImpl/PingFederateDSJNDIName"
                      },
                      "response": []
                    },
                    {
                      "name": "Set SearchBase for  OAuth Clients",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdd58167-fbbf-4eac-b0db-adb10cdda528",
                            "exec": [
                              "pm.test(\"OAuth Clients in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "6d6834e2-4b5d-427c-bca5-fe4cec4361cd",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"SearchBase\",\n    \"type\": \"STRING\",\n    \"stringValue\": \"ou=oauthClients,{{userBaseDN}}\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.oauth20.domain.ClientManagerLdapImpl/SearchBase"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "29ae380e-48c4-41df-a2a3-14d217f86f9a",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Set PD for OAuth Grants",
                  "item": [
                    {
                      "name": "Set PD for OAuth Grants",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"OAuth Grants in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "5001fd82-1151-4b86-935a-b48a165e62e3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "    {\n      \"id\": \"PingFederateDSJNDIName\",\n      \"type\": \"STRING\",\n      \"stringValue\": \"LDAP-PingDirectory\"\n    }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.oauth20.token.AccessGrantManagerLDAPPingDirectoryImpl/PingFederateDSJNDIName"
                      },
                      "response": []
                    },
                    {
                      "name": "Set SearchBase for OAuth Grants",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"OAuth Grants in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "c8574541-e0c5-45ff-bd89-302959ae8ba7",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"SearchBase\",\n    \"type\": \"STRING\",\n    \"stringValue\": \"ou=grants,{{userBaseDN}}\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.oauth20.token.AccessGrantManagerLDAPPingDirectoryImpl/SearchBase"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "9f7fa333-ebb4-4f96-8a78-b864d156385e",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Set PD for PF AuthN Sessions",
                  "item": [
                    {
                      "name": "Set PD for Sessions",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"PF Sessions in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "239b1a6d-87ce-4fbf-9191-996235e79eda",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "    {\n      \"id\": \"PingFederateDSJNDIName\",\n      \"type\": \"STRING\",\n      \"stringValue\": \"LDAP-PingDirectory\"\n    }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.saml20.service.session.data.impl.SessionStorageManagerLdapImpl/PingFederateDSJNDIName"
                      },
                      "response": []
                    },
                    {
                      "name": "Set SearchBase for Sessions",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"PF Sessions in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "d5b7eaa2-1baa-4b7f-9422-e8bda0ba9767",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "    {\n      \"id\": \"SearchBase\",\n      \"type\": \"STRING\",\n      \"stringValue\": \"ou=sessions,{{userBaseDN}}\"\n    }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.saml20.service.session.data.impl.SessionStorageManagerLdapImpl/SearchBase"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "6613d96c-be02-4642-a56f-31a57fd0e4e9",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Enable OGNL Expressions",
                  "item": [
                    {
                      "name": "Enable OGNL Expressions",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"PF Sessions in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "75b5ab43-3ea7-4fe2-be0e-9670e1730f2d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"evaluateExpressions\",\n    \"type\": \"STRING\",\n    \"stringValue\": \"true\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.common.ExpressionManager/evaluateExpressions"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "2a8ee647-8aef-47ec-bfbd-50475f7019ac",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "e27d5549-a702-4478-885e-b1b1aab7c3e8",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create PD PCV",
              "item": [
                {
                  "name": "Get BaseDN from PD",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b84ada5d-f877-48d8-b818-e8b18dcb4155",
                        "exec": [
                          "pm.test(\"BaseDN retrieved\", function () {",
                          "    pm.response.to.be.ok;",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0])",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4822221b-3205-400d-b7aa-104b08722640",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": {
                        "password": "{{pdAdminPwd}}",
                        "username": "{{pdAdmin}}"
                      }
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Add Password Credential Validator (LDAP - PD)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "3a8cf566-6b2a-4887-ac6f-f7e702cb3476",
                        "exec": [
                          "pm.test(\"LDAP PCV Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "6a66cc1a-b696-413d-b308-45c2f50695ca",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "PingFederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"PDPCV\",\n  \"name\": \"PD PCV\",\n  \"pluginDescriptorRef\": {\n  \"id\": \"org.sourceid.saml20.domain.LDAPUsernamePasswordCredentialValidator\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"Authentication Error Overrides\",\n        \"rows\": []\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"LDAP Datastore\",\n        \"value\": \"LDAP-PingDirectory\"\n      },\n      {\n        \"name\": \"Search Base\",\n        \"value\": \"{{userBaseDN}}\"\n      },\n      {\n        \"name\": \"Search Filter\",\n        \"value\": \"(|(uid=${username})(mail=${username}))\"\n      },\n      {\n        \"name\": \"Scope of Search\",\n        \"value\": \"Subtree\"\n      },\n      {\n        \"name\": \"Case-Sensitive Matching\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Display Name Attribute\",\n        \"value\": \"displayName\"\n      },\n      {\n        \"name\": \"Mail Attribute\",\n        \"value\": \"mail\"\n      },\n      {\n        \"name\": \"SMS Attribute\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"PingID Username Attribute\",\n        \"value\": \"uid\"\n      },\n      {\n        \"name\": \"Mail Search Filter\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Username Attribute\",\n        \"value\": \"uid\"\n      },\n      {\n        \"name\": \"Mail Verified Attribute\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"mail\"\n      },\n      {\n        \"name\": \"givenName\"\n      },\n      {\n        \"name\": \"DN\"\n      },\n      {\n        \"name\": \"username\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"entryUUID\"\n      },\n      {\n        \"name\": \"uid\"\n      }\n    ]\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/passwordCredentialValidators",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=obh1564002976555.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "f1141b4d-ba9d-4caf-a998-7daa13094e45",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "955fb199-ad87-4d4b-b02f-490d835e2a07",
          "description": "These calls configure the System for PingDirectory for Users and Configuration.\n\nAdds the following:\n\n* Datastore\n* Password Credential Validator\n\nIn the `50-before-post-start.sh` hook (`/pingfed/hooks`) the values in `hivemodule.xml` are swapped out for LDAP providers. The `/config-store` API is then used to configure those providers. \n\nThis enables PD as the store for:  \n\n* OAuth Clients\n* OAuth Grants\n* PF AuthN Sessions\n\n`config-store` API also used to:\n* Enable OGNL Expressions",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "9c34f025-1678-4334-83f4-7b5866da0ffb",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "9f3681e1-3fae-4abb-a5e8-e5ac2388c8cf",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "IDP Config",
          "item": [
            {
              "name": "Create AuthN Policy Contracts",
              "item": [
                {
                  "name": "Create Default AuthN Policy Contract",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                        "exec": [
                          "pm.test(\"Policy Contract (HTML) Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b6ef8347-e2bb-49ba-bd59-953ed5708eef",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"id\": \"defaultPolicyContract\",\n      \"name\": \"Default Policy Contract\",\n      \"coreAttributes\": [\n        {\n          \"name\": \"subject\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"ImmutableID\"\n        },\n        {\n          \"name\": \"mail\"\n        }\n      ]\n    }",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationPolicyContracts",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=udz1564002989838.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "c1b40d5d-3099-4f2c-8b27-73cc1177a3bd",
              "description": "Different Contracts used to provide different AuthN ceremonies for the Application.\n\nAdd the appropriate Contract to the App Mapping to trigger a different ceremony",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Extended Property Selector - AuthN Exp",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2eeefba3-473e-41a4-91b7-85321fd28393",
                    "exec": [
                      "pm.test(\"Extended Property Selector Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3fe18c4c-283c-46be-b016-4635067227c7",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "24bbbeba-e559-434e-bab3-d4f0d281e2fd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"authnExp\",\n    \"name\": \"AuthN Experience\",\n    \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.pf.selectors.ExtendedPropertyAuthnSelector\"\n    },\n    \"configuration\": {\n        \"tables\": [],\n        \"fields\": [\n            {\n                \"name\": \"Extended Property\",\n                \"value\": \"authNexp\"\n            }\n        ]\n    },\n    \"attributeContract\": {\n        \"extendedAttributes\": [\n            {\n                \"name\": \"Basic\"\n            },\n            {\n                \"name\": \"MFA\"\n            },\n            {\n                \"name\": \"Passwordless\"\n            },\n            {\n                \"name\": \"Internal\"\n            }\n        ]\n    }\n}",
                  "options": {}
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationSelectors",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=ndr1564002987357.html"
              },
              "response": []
            },
            {
              "name": "Enable IdP AuthN Policies",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                    "exec": [
                      "pm.test(\"IdP AuthN Policies Enabled\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1b13e54b-cc8c-4886-b97a-ead20f10f3e8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "PingFederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"enableIdpAuthnSelection\": true,\n  \"enableSpAuthnSelection\": false\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationPolicies/settings"
              },
              "response": []
            },
            {
              "name": "Enable Global AuthN Sessions",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                    "exec": [
                      "pm.test(\"IdP AuthN Policies Enabled\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "fd99b61d-e5f0-4920-86f8-a3a12366533d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "PingFederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"enableSessions\": true,\n  \"persistentSessions\": true,\n  \"idleTimeoutMins\": 60,\n  \"idleTimeoutDisplayUnit\": \"MINUTES\",\n  \"maxTimeoutMins\": 480,\n  \"maxTimeoutDisplayUnit\": \"MINUTES\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/session/authenticationSessionPolicies/global"
              },
              "response": []
            }
          ],
          "_postman_id": "f850cd50-8b6e-4722-911e-dbe3e9d2a481",
          "description": "Calls to setup the things to be used in the IDP\n\n* PD PCV\n* Default AuthN Policy Contract\n* Extended Property - `authnExp`\n* Extended Property Selector (`Basic` \\ `MFA` \\ `Passwordless`)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "0e967485-03db-4214-92f1-8b541d227115",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b3f4095a-64ed-43fb-afe1-d3ccef6d26b7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "OAuth Config - AS Settings",
          "item": [
            {
              "name": "Configure AS Settings",
              "item": [
                {
                  "name": "Configure AS Settings",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd235f96-6f1f-4407-a764-215c3716cda8",
                        "exec": [
                          "pm.test(\"OAuth AS configured\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "efaf1d02-f50e-441b-91cb-09bb7e207922",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"authorizationCodeTimeout\": 60,\n  \"authorizationCodeEntropy\": 30,\n  \"persistentGrantIdleTimeout\": 30,\n  \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n  \"refreshTokenLength\": 42,\n  \"rollRefreshTokenValues\": false,\n  \"refreshRollingInterval\": 0,\n  \"persistentGrantReuseGrantTypes\": [\n    \"IMPLICIT\"\n  ],\n  \"persistentGrantContract\": {\n    \"extendedAttributes\": [],\n    \"coreAttributes\": [\n      {\n        \"name\": \"USER_KEY\"\n      },\n      {\n        \"name\": \"USER_NAME\"\n      }\n    ]\n  },\n  \"bypassAuthorizationForApprovedGrants\": false,\n  \"allowUnidentifiedClientROCreds\": false,\n  \"allowUnidentifiedClientExtensionGrants\": false,\n  \"tokenEndpointBaseUrl\": \"\",\n  \"userAuthorizationUrl\": \"\",\n  \"registeredAuthorizationPath\": \"\",\n  \"pendingAuthorizationTimeout\": 600,\n  \"bypassActivationCodeConfirmation\": false,\n  \"devicePollingInterval\": 5,\n  \"userAuthorizationConsentPageSetting\": \"INTERNAL\",\n  \"atmIdForOAuthGrantManagement\": \"\",\n  \"scopeForOAuthGrantManagement\": \"\",\n  \"allowedOrigins\": [\n  ],\n  \"trackUserSessionsForLogout\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings"
                  },
                  "response": []
                }
              ],
              "_postman_id": "7bb3d233-281e-40a3-bff7-b8e0c7eb70f6",
              "description": "Add CORS for Delegator",
              "_postman_isSubFolder": true
            },
            {
              "name": "Scope Management",
              "item": [
                {
                  "name": "Common OIDC Scopes",
                  "item": [
                    {
                      "name": "OIDC Scope - openid",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d811d801-bc60-4dae-acfc-2718352313f9",
                            "exec": [
                              "pm.test(\"Scope (openid) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "3cd47d90-837e-47f0-b500-78b36e57dd56",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "value": "pingfederate",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"openid\",\n  \"description\": \"Used to authenticated with OIDC\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - address",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "58ab8f47-2136-4bc6-b45f-f987aeaa2b92",
                            "exec": [
                              "pm.test(\"Scope (address) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "88aa1fe4-a2f2-4564-a817-3cc9c021e77f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"address\",\n  \"description\": \"Used to access your postal address\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - email",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1cd8f58d-2dc3-4cf3-88b8-d678390c12ca",
                            "exec": [
                              "pm.test(\"Scope (email) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "4e7b32a6-3249-472d-86c3-66f58945c9fb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"email\",\n  \"description\": \"Used to access your email address\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - phone",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1bc376ac-f0f6-41dc-a893-bf17e158fd8b",
                            "exec": [
                              "pm.test(\"Scope (phone) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "cc9fb78e-f024-4294-98b8-ac5425cb4fb5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"phone\",\n  \"description\": \"Used to access your phone number\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - profile",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "186cebf3-76f8-4a06-aaae-793276f77cbf",
                            "exec": [
                              "pm.test(\"Scope (profile) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "f4d19097-13c6-4dad-95ce-4cbae53ab496",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"profile\",\n  \"description\": \"Used to access your profile\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "0a327918-f3b9-4501-a982-13747278a721",
                  "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=rbk1564002990993.html\n\nCreates the basic OIDC Scopes:\n\n* openid\n* address\n* email\n* phone\n* profile",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "bc7167bc-e11c-42a2-b7cf-a0804d17ac66",
              "description": "Creates a base set of scopes for OIDC and Ping integrations",
              "_postman_isSubFolder": true
            },
            {
              "name": "Grant Mapping",
              "item": [
                {
                  "name": "Create APC mapping - Default Policy Contract",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "736f229e-688f-4dcf-b4bb-641f6c1e7dde",
                        "exec": [
                          "pm.test(\"Grant Mapping Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c03b817d-d957-44d9-96c3-f24bc7157e3e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"attributeSources\": [],\n      \"attributeContractFulfillment\": {\n        \"USER_NAME\": {\n          \"source\": {\n            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n          },\n          \"value\": \"subject\"\n        },\n        \"USER_KEY\": {\n          \"source\": {\n            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n          },\n          \"value\": \"ImmutableID\"\n        }\n      },\n      \"issuanceCriteria\": {\n        \"conditionalCriteria\": []\n      },\n      \"authenticationPolicyContractRef\": {\n        \"id\": \"defaultPolicyContract\"\n      }\n    }",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authenticationPolicyContractMappings",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=enh1564002993753.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "bba62d6b-fbc5-46e0-9feb-2a15171e1561",
              "description": "Configuration of Grant Management\n\n* Default AuthN Policy Contract",
              "_postman_isSubFolder": true
            },
            {
              "name": "Token Managers",
              "item": [
                {
                  "name": "Create JWT Token Manager",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3639a176-e3c5-4e1f-babc-d998991cfe6b",
                        "exec": [
                          "pm.test(\"Access Token Manager (JWT) Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ff833031-3c29-4fe0-9852-bb2258674557",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"jwtDefault\",\n  \"name\": \"JWT-Default\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.pf.access.token.management.plugins.JwtBearerAccessTokenManagementPlugin\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"Symmetric Keys\",\n        \"rows\": []\n      },\n      {\n        \"name\": \"Certificates\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"Key ID\",\n                \"value\": \"cert\"\n              },\n              {\n                \"name\": \"Certificate\",\n                \"value\": \"signing-cert\"\n              }\n            ],\n            \"defaultRow\": false\n          }\n        ]\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"Token Lifetime\",\n        \"value\": \"120\"\n      },\n      {\n        \"name\": \"JWS Algorithm\",\n        \"value\": \"RS256\"\n      },\n      {\n        \"name\": \"Active Symmetric Key ID\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Active Signing Certificate Key ID\",\n        \"value\": \"cert\"\n      },\n      {\n        \"name\": \"JWE Algorithm\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"JWE Content Encryption Algorithm\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Active Symmetric Encryption Key ID\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Asymmetric Encryption Key\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Asymmetric Encryption JWKS URL\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Include Key ID Header Parameter\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Include X.509 Thumbprint Header Parameter\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Default JWKS URL Cache Duration\",\n        \"value\": \"720\"\n      },\n      {\n        \"name\": \"Include JWE Key ID Header Parameter\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Include JWE X.509 Thumbprint Header Parameter\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Client ID Claim Name\",\n        \"value\": \"client_id\"\n      },\n      {\n        \"name\": \"Scope Claim Name\",\n        \"value\": \"scope\"\n      },\n      {\n        \"name\": \"Space Delimit Scope Values\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Issuer Claim Value\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Audience Claim Value\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"JWT ID Claim Length\",\n        \"value\": \"0\"\n      },\n      {\n        \"name\": \"Access Grant GUID Claim Name\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"JWKS Endpoint Path\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"JWKS Endpoint Cache Duration\",\n        \"value\": \"720\"\n      },\n      {\n        \"name\": \"Publish Key ID X.509 URL\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Publish Thumbprint X.509 URL\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Expand Scope Groups\",\n        \"value\": \"false\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"sub\"\n      }\n    ]\n  },\n  \"selectionSettings\": {\n    \"resourceUris\": []\n  },\n  \"accessControlSettings\": {\n    \"restrictClients\": false,\n    \"allowedClients\": []\n  },\n  \"sessionValidationSettings\": {\n    \"checkValidAuthnSession\": false,\n    \"checkSessionRevocationStatus\": false,\n    \"updateAuthnSessionActivity\": false\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/accessTokenManagers",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=srl1564002994713.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "24aa7a8f-2cdb-42bd-814c-261795a7c40f",
              "description": "Configures the OAuth Token Mapping settings\n\n* Adds Default JWT Token Manager (Symmetric Key)\n* Adds AuthN Policy Contract Mapping",
              "_postman_isSubFolder": true
            },
            {
              "name": "Token Mappings",
              "item": [
                {
                  "name": "Create Mapping -- AuthN Policy Contract --> JWT Token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2b96e74c-7011-49d6-add6-37c1a46ed2c6",
                        "exec": [
                          "pm.test(\"Access Token Mapping Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1699327f-8431-47c1-9e70-0249ce5935ef",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": {\n    \"type\": \"AUTHENTICATION_POLICY_CONTRACT\",\n    \"contextRef\": {\n      \"id\": \"defaultPolicyContract\"\n    }\n  },\n  \"accessTokenManagerRef\": {\n    \"id\": \"jwtDefault\"\n  },\n  \"attributeContractFulfillment\": {\n    \"sub\": {\n      \"source\": {\n        \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n      },\n      \"value\": \"subject\"\n    }\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/accessTokenMappings",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=jfx1564002995189.html"
                  },
                  "response": []
                },
                {
                  "name": "Create Mapping -- Client Credentials --> JWT Token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2b96e74c-7011-49d6-add6-37c1a46ed2c6",
                        "exec": [
                          "pm.test(\"Access Token Mapping Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9d3cc7fd-aef8-471e-a3ba-8ace02255da6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"attributeSources\": [],\n    \"attributeContractFulfillment\": {\n      \"sub\": {\n        \"source\": {\n          \"type\": \"CONTEXT\"\n        },\n        \"value\": \"ClientId\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": []\n    },\n    \"id\": \"client_credentials|jwtDefault\",\n    \"context\": {\n      \"type\": \"CLIENT_CREDENTIALS\"\n    },\n    \"accessTokenManagerRef\": {\n      \"id\": \"jwtDefault\"\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/accessTokenMappings",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=jfx1564002995189.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "49774432-0bd2-4276-844b-7071b2cc6c44",
              "_postman_isSubFolder": true
            },
            {
              "name": "OIDC Policy",
              "item": [
                {
                  "name": "Create OIDC Policy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4aa206d6-cc0b-49c2-83a2-ddfdd4de1b6b",
                        "exec": [
                          "pm.test(\"OIDC Policy Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ca96bc34-4886-4541-b477-55acdeed0d8c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingdfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"OIDCPolicyDefault\",\n    \"name\": \"Default OIDC Policy\",\n    \"idTokenLifetime\": 5,\n    \"attributeContract\": {\n        \"coreAttributes\": [\n            {\n                \"name\": \"sub\"\n            }\n        ],\n        \"extendedAttributes\": [\n            {\n                \"name\": \"address\"\n            },\n            {\n                \"name\": \"phone_number\"\n            },\n            {\n                \"name\": \"email\"\n            },\n            {\n                \"name\": \"last_name\"\n            },\n            {\n                \"name\": \"first_name\"\n            }\n        ]\n    },\n    \"attributeMapping\": {\n        \"attributeSources\": [\n            {\n                \"type\": \"LDAP\",\n                \"dataStoreRef\": {\n                    \"id\": \"LDAP-PingDirectory\"\n                },\n                \"id\": \"PD\",\n                \"description\": \"PD\",\n                \"baseDn\": \"{{userBaseDN}}\",\n                \"searchScope\": \"SUBTREE\",\n                \"searchFilter\": \"uid=${sub}\",\n                \"binaryAttributeSettings\": {},\n                \"memberOfNestedGroup\": false\n            }\n        ],\n        \"attributeContractFulfillment\": {\n            \"sub\": {\n                \"source\": {\n                    \"type\": \"TOKEN\"\n                },\n                \"value\": \"sub\"\n            },\n            \"address\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"postalAddress\"\n            },\n            \"phone_number\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"telephoneNumber\"\n            },\n            \"email\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"mail\"\n            },\n            \"first_name\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"givenName\"\n            },\n            \"last_name\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"sn\"\n            }\n        },\n        \"issuanceCriteria\": {\n            \"conditionalCriteria\": []\n        }\n    },\n    \"includeSriInIdToken\": false,\n    \"includeUserInfoInIdToken\": false,\n    \"includeSHashInIdToken\": false,\n    \"returnIdTokenOnRefreshGrant\": false,\n    \"accessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n    },\n    \"scopeAttributeMappings\": {}\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/openIdConnect/policies",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=dkd1564002996125.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "dfbb877d-e5fa-44ff-b692-41057e7bdbdb",
              "description": "Creates a basic OIDC Policy.\n\nContains only the `sub` claim",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "d197fa77-77e4-44c2-82f9-0eeb6fb5c525",
          "description": "This folder contains calls to configure the AS Server:\n\n**Scope Management**\n* Common OIDC Scopes\n\n**Grant Mapping**\n* Default AuthN Policy Contract Mapping\n\n**Access Tokens**\n* JWT Access Token Manager\n* Default AuthN Policy Contract Mapping\n\n**OIDC Policy**\n* Default OIDC Policy\n",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "8850f13f-df87-4530-b114-0686c9ccd5c8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "688e1869-1e7f-43e7-9554-57942c2a89e2",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "30d042e5-e4f6-4372-9de5-f5ad39328c7d",
      "description": "This collection does a common base config for PingFed - these are leveraged by additional Use Cases.\n\nThe collection assumes a vanilla install of PF and will create an Admin account to be use for these calls.\n\n* Make sure PF is running\n* Initial Configs\n* Configure PD as config store\n* Configure Identity Provider role\n* Configure OAuth Authorization Server role\n",
      "auth": {
        "type": "basic",
        "basic": {
          "password": "{{pfAdminPwd}}",
          "username": "{{pfAdmin}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "a1fb8d47-c606-4bc6-922d-cbe55420deb8",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "cc22d39e-222d-4074-8040-615b251ac342",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "PF - CIAM",
      "item": [
        {
          "name": "Check PF Pre-Reqs",
          "item": [
            {
              "name": "Check for PID SDK Adapter",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a7864a9-1358-402a-b81d-bcc6da8044ff",
                    "exec": [
                      "// Check that SDK Adapter is there -- if not, terminate",
                      "postman.setNextRequest(\"null\");",
                      "",
                      "pm.test(\"Server is Up\", function () {",
                      "    pm.response.to.be.ok;",
                      "    postman.setNextRequest(\"00-Start-CIAM\");",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f9e66381-07f9-487a-b8e4-f97b5521bef7",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "7665e44c-b124-45e0-99b8-1fcc5a030305",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters/descriptors/com.pingidentity.adapters.pingid.PingIDSDKAdapter",
                "description": "This call checks to see that the PID SDK Adapter is available on the PF instance"
              },
              "response": []
            },
            {
              "name": "00-Start-CIAM",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cd64bf84-50d5-4ada-aec9-ff1d52f0c5cb",
                    "exec": [
                      "pm.test(\"Starting Collection\", function () {",
                      "    pm.response.to.be.status(302);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "f6d5a3a7-ac7e-4545-a6bb-0cac894944e9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com"
              },
              "response": []
            },
            {
              "name": "Get BaseDN from PD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b84ada5d-f877-48d8-b818-e8b18dcb4155",
                    "exec": [
                      "pm.test(\"BaseDN retrieved\", function () {",
                      "    pm.response.to.be.ok;",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0])",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "5920e660-8571-43c3-94dc-d7d4039eebab",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "password": "{{pdAdminPwd}}",
                    "username": "{{pdAdmin}}"
                  }
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pdAdminUrl}}/directory/v1"
              },
              "response": []
            }
          ],
          "_postman_id": "5147392c-713f-4c61-967e-6a36c8f9f677",
          "description": "This folder contains the call that's used to wait until a desired condition is met.\n\nThe `Pre-request` of the call contains a log event with a timer of 30s. The `Test Script` of the call contains the loop back to this call, and the Condition test that will break the looping.\n\nThe name of the call for the break is `00-Start-CIAM` -- it's a simple GET request to https://postman-echo.com and allows for this to be always consistent.\n\nThe actual set of API calls for this collection are started right after this GET call.",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "263d6b60-7de9-4ff9-850e-1838ee21a6a3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ba5aaee1-d75e-4fca-8667-8ff592b34ad4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Create CIAM IdP Components",
          "item": [
            {
              "name": "Create PingID SDK bits",
              "item": [
                {
                  "name": "PF Calls",
                  "item": [
                    {
                      "name": "Create PingID SDK Adapter",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "0f041508-2f2f-4c55-b953-8a248dd5a778",
                            "exec": [
                              "var pidsdkBase64 = btoa(pm.environment.get('pingIdSdk'));",
                              "",
                              "pm.environment.set('encodedPingIDSdk', pidsdkBase64);"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "28992abe-ced9-48bd-8c36-cbbcf49b6787",
                            "exec": [
                              "pm.test(\"PingID SDK Adapter Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "371fe2a7-48d9-4aca-ae6b-a667a66e154d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "value": "pingfederate",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"id\": \"PingIDSDK\",\n  \"name\": \"PingIDSDK\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.adapters.pingid.PingIDSDKAdapter\"\n  },\n  \"configuration\": {\n    \"tables\": [],\n    \"fields\": [\n      {\n        \"name\": \"PingID SDK Properties\",\n        \"value\": \"{{encodedPingIDSdk}}\"\n      },\n      {\n        \"name\": \"Application ID\",\n        \"value\": \"{{sdkAppId}}\"\n      },\n      {\n        \"name\": \"Device Pairing\",\n        \"value\": \"automatic\"\n      },\n      {\n        \"name\": \"Unpaired Users - Manual Pairing\",\n        \"value\": \"bypass\"\n      },\n      {\n        \"name\": \"Unpaired Users - Web Login\",\n        \"value\": \"bypass\"\n      },\n      {\n        \"name\": \"Additional Trusted Devices\",\n        \"value\": \"network\"\n      },\n      {\n        \"name\": \"MFA timeout\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"User Verification\",\n        \"value\": \"bypass\"\n      },\n      {\n        \"name\": \"Authentication During Errors\",\n        \"value\": \"bypass\"\n      },\n      {\n        \"name\": \"Heartbeat Timeout\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"HTML Template\",\n        \"value\": \"pingid.sdk.login.template.html\"\n      },\n      {\n        \"name\": \"Messages File\",\n        \"value\": \"pingid-sdk-messages\"\n      },\n      {\n        \"name\": \"Change Device\",\n        \"value\": \"display\"\n      },\n      {\n        \"name\": \"Success Screens\",\n        \"value\": \"noDisplay\"\n      },\n      {\n        \"name\": \"Error Screens\",\n        \"value\": \"display\"\n      },\n      {\n        \"name\": \"Timeout Screens\",\n        \"value\": \"display\"\n      },\n      {\n        \"name\": \"QR code based authentication\",\n        \"value\": \"conditionally\"\n      },\n      {\n        \"name\": \"ROOTED/JAILBROKEN DEVICE\",\n        \"value\": \"block\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"pingid.sdk.status\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"policy.action\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"authenticating.device.rooted\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"pingid.sdk.status.reason\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"accessing.device.rooted\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"username\",\n        \"masked\": false,\n        \"pseudonym\": true\n      }\n    ],\n    \"extendedAttributes\": [],\n    \"maskOgnlValues\": false\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [],\n    \"attributeContractFulfillment\": {\n      \"pingid.sdk.status\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"pingid.sdk.status\"\n      },\n      \"policy.action\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"policy.action\"\n      },\n      \"authenticating.device.rooted\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"authenticating.device.rooted\"\n      },\n      \"pingid.sdk.status.reason\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"pingid.sdk.status.reason\"\n      },\n      \"accessing.device.rooted\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"accessing.device.rooted\"\n      },\n      \"username\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"username\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": []\n    }\n  }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters",
                        "description": "https://docs.pingidentity.com/bundle/pingid/page/jrd1564020460208.html"
                      },
                      "response": []
                    },
                    {
                      "name": "Create PingID SDK Connector (Provisioning)",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "0f041508-2f2f-4c55-b953-8a248dd5a778",
                            "exec": [
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "28992abe-ced9-48bd-8c36-cbbcf49b6787",
                            "exec": [
                              "pm.test(\"PingID SDK Connector Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "d6d76775-d0b7-49bc-ae1d-9c78791d9d71",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"type\": \"SP\",\n    \"id\": \"pidSdkConnector\",\n    \"name\": \"PingID SDK Connector\",\n    \"entityId\": \"PingID SDK Connector\",\n    \"active\": true,\n    \"contactInfo\": {},\n    \"baseUrl\": \"https://sdk.pingid.com\",\n    \"loggingMode\": \"STANDARD\",\n    \"virtualEntityIds\": [],\n    \"licenseConnectionGroup\": \"\",\n    \"credentials\": {\n        \"certs\": []\n    },\n    \"outboundProvision\": {\n        \"type\": \"PingIDForCustomers\",\n        \"targetSettings\": [\n            {\n                \"name\": \"applicationId\",\n                \"value\": \"{{sdkAppId}}\"\n            },\n            {\n                \"name\": \"pingIdSdkProperties\",\n                \"value\": \"{{encodedPingIDSdk}}\"\n            },\n            {\n                \"name\": \"primaryAuthenticationMethodUponCreation\",\n                \"value\": \"Email 1\"\n            },\n            {\n                \"name\": \"Provisioning Options\"\n            },\n            {\n                \"name\": \"createNewUsers\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"updateNewUsers\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"disableNewUsers\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"provisionDisabledUsers\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"removeAction\",\n                \"value\": \"Delete\"\n            }\n        ],\n        \"channels\": [\n            {\n                \"active\": true,\n                \"channelSource\": {\n                    \"dataSource\": {\n                        \"id\": \"LDAP-PingDirectory\"\n                    },\n                    \"guidAttributeName\": \"entryUUID\",\n                    \"changeDetectionSettings\": {\n                        \"userObjectClass\": \"person\",\n                        \"groupObjectClass\": \"groupOfUniqueNames\",\n                        \"changedUsersAlgorithm\": \"TIMESTAMP_NO_NEGATION\",\n                        \"usnAttributeName\": \"\",\n                        \"timeStampAttributeName\": \"modifyTimestamp\"\n                    },\n                    \"groupMembershipDetection\": {\n                        \"memberOfGroupAttributeName\": \"\",\n                        \"groupMemberAttributeName\": \"uniqueMember\"\n                    },\n                    \"accountManagementSettings\": {\n                        \"accountStatusAttributeName\": \"nsaccountlock\",\n                        \"accountStatusAlgorithm\": \"ACCOUNT_STATUS_ALGORITHM_FLAG\",\n                        \"flagComparisonValue\": \"true\",\n                        \"flagComparisonStatus\": false,\n                        \"defaultStatus\": true\n                    },\n                    \"baseDn\": \"{{userBaseDN}}\",\n                    \"userSourceLocation\": {\n                        \"groupDN\": \"\",\n                        \"filter\": \"mail=*\",\n                        \"nestedSearch\": false\n                    },\n                    \"groupSourceLocation\": {\n                        \"groupDN\": \"\",\n                        \"filter\": \"\",\n                        \"nestedSearch\": false\n                    },\n                    \"guidBinary\": false\n                },\n                \"attributeMapping\": [\n                    {\n                        \"fieldName\": \"username\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [\n                                \"uid\"\n                            ],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"email1\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [\n                                \"mail\"\n                            ],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"email2\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"email3\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"firstName\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [\n                                \"givenName\"\n                            ],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"lastName\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [\n                                \"sn\"\n                            ],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"smsNumber1\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [\n                                \"mobile\"\n                            ],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"smsNumber2\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"smsNumber3\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"voiceNumber1\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"voiceNumber2\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    },\n                    {\n                        \"fieldName\": \"voiceNumber3\",\n                        \"saasFieldInfo\": {\n                            \"attributeNames\": [],\n                            \"defaultValue\": \"\",\n                            \"expression\": \"\",\n                            \"createOnly\": false,\n                            \"trim\": false,\n                            \"characterCase\": \"NONE\",\n                            \"parser\": \"NONE\",\n                            \"masked\": false\n                        }\n                    }\n                ],\n                \"name\": \"SDK Provisioner\",\n                \"maxThreads\": 1,\n                \"timeout\": 60\n            }\n        ]\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/spConnections/",
                        "description": "https://docs.pingidentity.com/bundle/pingid/page/rvz1564020469651.html\n\nThis call configures the SDK Provisioner -- with the Primary method set to the email address (since PingID SDK Services disable SMS \\ Voice for trial accounts)."
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "bc0f60cc-5abf-4bfd-8617-854bc3ed248c",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "PID SDK Calls",
                  "item": [
                    {
                      "name": "Create PID SDK Email Template",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "70c78ac4-65e7-4b6e-8ab1-77ab3d845970",
                            "exec": [
                              "// This script can be used to create the proper Authorization token needed for any call made to the PingID SDK service.",
                              "",
                              "// The tenant secrets - sdkApiKey && sdkApiToken - should be defined in the Collection Environment.",
                              "",
                              "// PM Variables can be used in the URL - this script will replace the following with corresponding values from the Environment:",
                              "//    {{sdkAccountId}}",
                              "//    {{sdkAppId}}",
                              "//    {{userId}}",
                              "//    {{deviceId}}",
                              "//    {{id}}",
                              "//",
                              "// https://sdk.pingid.com/pingid/v1/accounts/{{sdkAccountId}}/applications/{{sdkAppId}}/users/{{userId}}",
                              "// https://sdk.pingid.com/pingid/v1/accounts/{{sdkAccountId}}/users/{{userId}}/devices/{{deviceId}}",
                              "// https://sdk.pingid.com/pingid/v1/accounts/{{sdkAccountId}}/applications/{{sdkAppId}}/users/{{userId}}/smspairings/{{id}}",
                              "//",
                              "",
                              "var removeIllegalCharacters = function (input) {",
                              "    return input",
                              "        .replace(/=/g, '')",
                              "        .replace(/\\+/g, '-')",
                              "        .replace(/\\//g, '_');",
                              "};",
                              "",
                              "// Base64 Encoding function",
                              "var base64object = function (input) {",
                              "    var inputWords = CryptoJS.enc.Utf8.parse(JSON.stringify(input));",
                              "    var base64 = CryptoJS.enc.Base64.stringify(inputWords);",
                              "    var output = removeIllegalCharacters(base64);",
                              "    return output;",
                              "};",
                              "",
                              "// Parse out the {{pingIdSdk}} variables from the PIDSDK properties file in the Environment.",
                              "// Note: If running in Postman, use `.split(\"\\\\n\")`",
                              "var sdkProperties = pm.environment.get(\"pingIdSdk\").split(\"\\n\");",
                              "var sdkApiKey = sdkProperties[2].split(\"=\")[1];",
                              "var sdkApiToken = sdkProperties[3].split(\"=\")[1];",
                              "var sdkAccountId = sdkProperties[5].split(\"=\")[1];",
                              "",
                              "// Store in the environment for subsequent SDK requests",
                              "pm.environment.set(\"sdkAccountId\", sdkAccountId);",
                              "",
                              "//Parse the Request",
                              "var method = pm.request.method;",
                              "//var payload = pm.request.body.raw;",
                              "var payload = pm.request.body.raw;",
                              "var path = pm.request.url.path.toString().replace(/,/g, \"/\");",
                              "",
                              "// Due to the way PM handles the request object, the URL Path needs to be rebuilt with the value substitution",
                              "var path = path.replace(\"{{sdkAccountId}}\", pm.environment.get(\"sdkAccountId\"));",
                              "var path = path.replace(\"{{sdkAppId}}\", pm.environment.get(\"sdkAppId\"));",
                              "var path = path.replace(\"{{userId}}\", pm.environment.get(\"userId\"));",
                              "var path = path.replace(\"{{deviceId}}\", pm.environment.get(\"deviceId\"));",
                              "var path = path.replace(\"{{id}}\", pm.environment.get(\"id\"));",
                              "",
                              "//Grab any parameters",
                              "var parameters = pm.request.url.query.toString();",
                              "",
                              "// Hash and Hex Encode Request Payload",
                              "var payloadHash = CryptoJS.SHA256(payload);",
                              "var payloadHex = CryptoJS.enc.Hex.stringify(payloadHash);",
                              "",
                              "// Build the proper canonicalString",
                              "if (parameters === \"\") {",
                              "    var canonicalString = method + \":\" + \"sdk.pingid.com\" + \":\" + \"/\" + path + \":\" + payloadHex + \":\";",
                              "}",
                              "else {",
                              "    var canonicalString = method + \":\" + \"sdk.pingid.com\" + \":\" + \"/\" + path + \":\" + parameters + \":\" + payloadHex + \":\";",
                              "}",
                              "",
                              "// Hash the Canonical String",
                              "var stringHash = CryptoJS.SHA256(canonicalString);",
                              "var stringHex = CryptoJS.enc.Hex.stringify(stringHash);",
                              "",
                              "// Construct JWT Header",
                              "var jwtHeader = { 'alg': 'HS256', 'typ': 'JWT', 'account_id': sdkAccountId, 'token': sdkApiToken, 'jwt_version': 'v4' };",
                              "",
                              "// Construct JWT Payload",
                              "var jwtPayload = { 'data': stringHex };",
                              "",
                              "// Create JWT",
                              "var unsignedToken = base64object(jwtHeader) + \".\" + base64object(jwtPayload);",
                              "",
                              "// Sign the JWT",
                              "var sdkApiKeyBytes = CryptoJS.enc.Base64.parse(sdkApiKey);",
                              "var signatureHash = CryptoJS.HmacSHA256(unsignedToken, sdkApiKeyBytes);",
                              "var signature = CryptoJS.enc.Base64.stringify(signatureHash);",
                              "var signature2 = removeIllegalCharacters(signature);",
                              "",
                              "var token = unsignedToken + '.' + signature2;",
                              "",
                              "// Set the token in the environment to be included in an Authorization: PINGID-HMAC={{authToken}} header for the request",
                              "pm.environment.set(\"authToken\", token);"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "9f8801c2-77e9-4487-a940-820fdb9521f8",
                            "exec": [
                              "pm.test(\"PingID SDK Email Template Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "8fdd4f9f-df99-4d54-a34a-b2784bfe8abe",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "PINGID-HMAC={{authToken}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{ \n\t\"fromAddress\": \"noreply@pingidentity.com\", \n\t\"emailSubject\": \"User Authentication (PingFederate)\", \n\t\"emailBody\": \"New authentication request - OTP is ${OTP}\", \n\t\"replyToAddress\": \"noreply@pingidentity.com\", \n\t\"type\": \"auth_without_payload\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "https://sdk.pingid.com/pingid/v1/accounts/{{sdkAccountId}}/applications/{{sdkAppId}}/emailconfigurations/",
                        "description": "This call is used to create the default emailTemplate that PF will use for OTP MFA.\n\nYou will need this if you set an Applications `Extended Properties` to **MFA**\n\nThere's a pre-request script that creates the proper Authorization header for the SDK API call (it's all custom)."
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "98d22b30-38ca-4848-8ad1-e8f9ef421ffb",
                  "auth": {
                    "type": "noauth"
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "c0807b45-1922-474f-9271-6e10debb2ac4",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "bf4f525a-c531-46dd-a14b-ab81cf2c119e",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "b88e4db3-1e64-4b87-b781-2fb8acce9c7b",
              "_postman_isSubFolder": true
            },
            {
              "name": "AuthN API Application",
              "item": [
                {
                  "name": "Create Default AuthN API Application",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "71e3a37a-7c2c-4909-863f-7051ff79ec48",
                        "exec": [
                          "pm.test(\"AuthN API App Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "2c965c05-e35a-49ed-b998-b0273cc12744",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"DefaultAuthNAPIApp\",\n  \"url\": \"{{pfAuthnApiUrl}}\",\n  \"description\": \"\",\n  \"additionalAllowedOrigins\": [],\n  \"name\": \"Default AuthN API\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationApi/applications",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=lrz1564002999175.html"
                  },
                  "response": []
                },
                {
                  "name": "Enable AuthN API",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d3648d99-119b-4ff6-be07-e4d62057f518",
                        "exec": [
                          "pm.test(\"AuthN API Enabled\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3931f424-7f5c-4550-bbc5-b2586d7727d0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"apiEnabled\": true,\n  \"defaultApplicationRef\": {\n    \"id\": \"DefaultAuthNAPIApp\"\n  },\n  \"enableApiDescriptions\": true\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationApi/settings",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=ldc1564002999116.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "eea4321e-f9df-4429-a297-76a3ff8dfa66",
              "description": "Configure the PF Authentication API",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e895e937-317d-4f2d-a2c3-9811dc04bd97",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "81b370e6-61d7-4381-8f19-b2de7232d108",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Create HTML Form with LIP Adapter",
              "item": [
                {
                  "name": "Create Forgot Password Policy Contract",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                        "exec": [
                          "pm.test(\"Policy Contract (HTML) Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8af3584a-33fd-4532-b0bd-5e475acc5cf3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"id\": \"forgotPassword\",\n      \"name\": \"Forgot Password Contract\",\n      \"coreAttributes\": [\n        {\n          \"name\": \"subject\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"entryUUID\"\n        },\n        {\n          \"name\": \"mail\"\n        }\n      ]\n    }",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationPolicyContracts"
                  },
                  "response": []
                },
                {
                  "name": "Create LIP - Default Identity Profile",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                        "exec": [
                          "pm.test(\"Default LIP Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "0e178b0c-7698-4d66-badb-6dce063a23e8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"defaultIdentityProfile\",\n    \"name\": \"Default Identity Profile\",\n    \"apcId\": {\n        \"id\": \"defaultPolicyContract\"\n    },\n    \"authSources\": [\n        {\n            \"source\": \"Facebook\",\n            \"id\": \"facebook\"\n        },\n        {\n            \"source\": \"Google\",\n            \"id\": \"google\"\n        },\n        {\n            \"source\": \"QR Code\",\n            \"id\": \"qrcode\"\n        }\n    ],\n    \"authSourceUpdatePolicy\": {\n        \"storeAttributes\": true,\n        \"retainAttributes\": false,\n        \"updateAttributes\": true,\n        \"updateInterval\": 7\n    },\n    \"registrationConfig\": {\n        \"captchaEnabled\": false,\n        \"templateName\": \"local.identity.registration.html\"\n    },\n    \"fieldConfig\": {\n        \"fields\": [\n            {\n                \"type\": \"TEXT\",\n                \"id\": \"fullName\",\n                \"label\": \"Full Name\",\n                \"registrationPageField\": true,\n                \"profilePageField\": true,\n                \"attributes\": {\n                    \"Read-Only\": false,\n                    \"Required\": false,\n                    \"Unique ID Field\": false,\n                    \"Mask Log Values\": false\n                },\n                \"defaultValue\": \"\"\n            },\n            {\n                \"type\": \"TEXT\",\n                \"id\": \"firstName\",\n                \"label\": \"First Name\",\n                \"registrationPageField\": true,\n                \"profilePageField\": true,\n                \"attributes\": {\n                    \"Read-Only\": false,\n                    \"Required\": false,\n                    \"Unique ID Field\": false,\n                    \"Mask Log Values\": false\n                },\n                \"defaultValue\": \"\"\n            },\n            {\n                \"type\": \"TEXT\",\n                \"id\": \"lastName\",\n                \"label\": \"Last Name\",\n                \"registrationPageField\": true,\n                \"profilePageField\": true,\n                \"attributes\": {\n                    \"Read-Only\": false,\n                    \"Required\": false,\n                    \"Unique ID Field\": false,\n                    \"Mask Log Values\": false\n                },\n                \"defaultValue\": \"\"\n            },\n            {\n                \"type\": \"EMAIL\",\n                \"id\": \"email\",\n                \"label\": \"Email Address\",\n                \"registrationPageField\": true,\n                \"profilePageField\": true,\n                \"attributes\": {\n                    \"Read-Only\": false,\n                    \"Required\": true,\n                    \"Unique ID Field\": false,\n                    \"Mask Log Values\": false\n                }\n            },\n            {\n                \"type\": \"PHONE\",\n                \"id\": \"phoneNumber\",\n                \"label\": \"Phone Number\",\n                \"registrationPageField\": true,\n                \"profilePageField\": true,\n                \"attributes\": {\n                    \"Read-Only\": false,\n                    \"Required\": false,\n                    \"Unique ID Field\": false,\n                    \"Mask Log Values\": false\n                }\n            },\n            {\n                \"type\": \"TEXT\",\n                \"id\": \"username\",\n                \"label\": \"Username\",\n                \"registrationPageField\": true,\n                \"profilePageField\": true,\n                \"attributes\": {\n                    \"Read-Only\": false,\n                    \"Required\": true,\n                    \"Unique ID Field\": true,\n                    \"Mask Log Values\": false\n                },\n                \"defaultValue\": \"\"\n            }\n        ]\n    },\n    \"emailVerificationConfig\": {\n        \"emailVerificationEnabled\": false\n    },\n    \"dataStoreConfig\": {\n        \"type\": \"LDAP\",\n        \"dataStoreRef\": {\n            \"id\": \"LDAP-PingDirectory\"\n        },\n        \"baseDn\": \"ou=People,{{userBaseDN}}\",\n        \"createPattern\": \"uid=${username}\",\n        \"objectClass\": \"inetOrgPerson\",\n        \"dataStoreMapping\": {\n            \"firstName\": {\n                \"type\": \"LDAP\",\n                \"name\": \"givenName\",\n                \"metadata\": {}\n            },\n            \"lastName\": {\n                \"type\": \"LDAP\",\n                \"name\": \"sn\",\n                \"metadata\": {}\n            },\n            \"phoneNumber\": {\n                \"type\": \"LDAP\",\n                \"name\": \"mobile\",\n                \"metadata\": {}\n            },\n            \"fullName\": {\n                \"type\": \"LDAP\",\n                \"name\": \"cn\",\n                \"metadata\": {}\n            },\n            \"email\": {\n                \"type\": \"LDAP\",\n                \"name\": \"mail\",\n                \"metadata\": {}\n            },\n            \"username\": {\n                \"type\": \"LDAP\",\n                \"name\": \"uid\",\n                \"metadata\": {}\n            }\n        }\n    },\n    \"profileConfig\": {\n        \"deleteIdentityEnabled\": false,\n        \"templateName\": \"local.identity.profile.html\"\n    },\n    \"profileEnabled\": true,\n    \"registrationEnabled\": true\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/localIdentity/identityProfiles",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=mvi1564003006379.html"
                  },
                  "response": []
                },
                {
                  "name": "Create Adapter - HTML Form with LIP",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                        "exec": [
                          "pm.test(\"HTML Form with LIP Adapter Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3c001e32-161f-4427-9d0f-24f7f8761b5b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "PingFederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"HTMLFormWithLIP\",\n    \"name\": \"HTML Form with LIP\",\n    \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.adapters.htmlform.idp.HtmlFormIdpAuthnAdapter\"\n    },\n    \"configuration\": {\n        \"tables\": [\n            {\n                \"name\": \"Credential Validators\",\n                \"rows\": [\n                    {\n                        \"fields\": [\n                            {\n                                \"name\": \"Password Credential Validator Instance\",\n                                \"value\": \"PDPCV\"\n                            }\n                        ],\n                        \"defaultRow\": false\n                    }\n                ]\n            }\n        ],\n        \"fields\": [\n            {\n                \"name\": \"Challenge Retries\",\n                \"value\": \"3\"\n            },\n            {\n                \"name\": \"Session State\",\n                \"value\": \"None\"\n            },\n            {\n                \"name\": \"Session Timeout\",\n                \"value\": \"60\"\n            },\n            {\n                \"name\": \"Session Max Timeout\",\n                \"value\": \"480\"\n            },\n            {\n                \"name\": \"Allow Password Changes\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Password Management System\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Enable 'Remember My Username'\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Enable 'This is My Device'\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Change Password Email Notification\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Show Password Expiring Warning\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Password Reset Type\",\n                \"value\": \"POLICY\"\n            },\n            {\n                \"name\": \"Password Reset Policy Contract\",\n                \"value\": \"forgotPassword\"\n            },\n            {\n                \"name\": \"Account Unlock\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Local Identity Profile\",\n                \"value\": \"defaultIdentityProfile\"\n            },\n            {\n                \"name\": \"Notification Publisher\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Enable Username Recovery\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Login Template\",\n                \"value\": \"html.form.login.template.html\"\n            },\n            {\n                \"name\": \"Logout Path\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Logout Redirect\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Logout Template\",\n                \"value\": \"idp.logout.success.page.template.html\"\n            },\n            {\n                \"name\": \"Change Password Template\",\n                \"value\": \"html.form.change.password.template.html\"\n            },\n            {\n                \"name\": \"Change Password Message Template\",\n                \"value\": \"html.form.message.template.html\"\n            },\n            {\n                \"name\": \"Password Management System Message Template\",\n                \"value\": \"html.form.message.template.html\"\n            },\n            {\n                \"name\": \"Change Password Email Template\",\n                \"value\": \"message-template-end-user-password-change.html\"\n            },\n            {\n                \"name\": \"Expiring Password Warning Template\",\n                \"value\": \"html.form.password.expiring.notification.template.html\"\n            },\n            {\n                \"name\": \"Threshold for Expiring Password Warning\",\n                \"value\": \"7\"\n            },\n            {\n                \"name\": \"Snooze Interval for Expiring Password Warning\",\n                \"value\": \"24\"\n            },\n            {\n                \"name\": \"Login Challenge Template\",\n                \"value\": \"html.form.login.challenge.template.html\"\n            },\n            {\n                \"name\": \"'Remember My Username' Lifetime\",\n                \"value\": \"30\"\n            },\n            {\n                \"name\": \"'This is My Device' Lifetime\",\n                \"value\": \"30\"\n            },\n            {\n                \"name\": \"Allow Username Edits During Chaining\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Track Authentication Time\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Post-Password Change Re-Authentication Delay\",\n                \"value\": \"0\"\n            },\n            {\n                \"name\": \"Password Reset Username Template\",\n                \"value\": \"forgot-password.html\"\n            },\n            {\n                \"name\": \"Password Reset Code Template\",\n                \"value\": \"forgot-password-resume.html\"\n            },\n            {\n                \"name\": \"Password Reset Template\",\n                \"value\": \"forgot-password-change.html\"\n            },\n            {\n                \"name\": \"Password Reset Error Template\",\n                \"value\": \"forgot-password-error.html\"\n            },\n            {\n                \"name\": \"Password Reset Success Template\",\n                \"value\": \"forgot-password-success.html\"\n            },\n            {\n                \"name\": \"Account Unlock Template\",\n                \"value\": \"account-unlock.html\"\n            },\n            {\n                \"name\": \"OTP Length\",\n                \"value\": \"8\"\n            },\n            {\n                \"name\": \"OTP Time to Live\",\n                \"value\": \"10\"\n            },\n            {\n                \"name\": \"PingID Properties\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Require Verified Email\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Username Recovery Template\",\n                \"value\": \"username.recovery.template.html\"\n            },\n            {\n                \"name\": \"Username Recovery Info Template\",\n                \"value\": \"username.recovery.info.template.html\"\n            },\n            {\n                \"name\": \"Username Recovery Email Template\",\n                \"value\": \"message-template-username-recovery.html\"\n            },\n            {\n                \"name\": \"CAPTCHA for Authentication\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"CAPTCHA for Password change\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"CAPTCHA for Password Reset\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"CAPTCHA for Username recovery\",\n                \"value\": \"false\"\n            }\n        ]\n    },\n    \"attributeContract\": {\n        \"coreAttributes\": [\n            {\n                \"name\": \"policy.action\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"username\",\n                \"masked\": false,\n                \"pseudonym\": true\n            }\n        ],\n        \"extendedAttributes\": [\n            {\n                \"name\": \"entryUUID\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"mail\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"uid\",\n                \"masked\": false,\n                \"pseudonym\": false\n            }\n        ],\n        \"maskOgnlValues\": false\n    },\n    \"attributeMapping\": {\n        \"attributeSources\": [],\n        \"attributeContractFulfillment\": {\n            \"entryUUID\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"entryUUID\"\n            },\n            \"mail\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"mail\"\n            },\n            \"uid\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"uid\"\n            },\n            \"policy.action\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"policy.action\"\n            },\n            \"username\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"username\"\n            }\n        },\n        \"issuanceCriteria\": {\n            \"conditionalCriteria\": []\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=fjx1564003007321.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "8ade6652-6d00-4445-8e42-26e32f7dd91f",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create HTML Form (Internal Use)",
              "item": [
                {
                  "name": "Create Adapter - HTML Form",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                        "exec": [
                          "pm.test(\"HTML Form with LIP Adapter Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "00b5bdcb-8930-45f0-9b63-7d21e7ddfadf",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"HTMLForm\",\n  \"name\": \"HTML Form\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.adapters.htmlform.idp.HtmlFormIdpAuthnAdapter\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"Credential Validators\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"Password Credential Validator Instance\",\n                \"value\": \"PDPCV\"\n              }\n            ],\n            \"defaultRow\": false\n          }\n        ]\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"Challenge Retries\",\n        \"value\": \"3\"\n      },\n      {\n        \"name\": \"Session State\",\n        \"value\": \"None\"\n      },\n      {\n        \"name\": \"Session Timeout\",\n        \"value\": \"60\"\n      },\n      {\n        \"name\": \"Session Max Timeout\",\n        \"value\": \"480\"\n      },\n      {\n        \"name\": \"Allow Password Changes\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Password Management System\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Enable 'Remember My Username'\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Enable 'This is My Device'\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Change Password Email Notification\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Show Password Expiring Warning\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Password Reset Type\",\n        \"value\": \"NONE\"\n      },\n      {\n        \"name\": \"Password Reset Policy Contract\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Account Unlock\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Local Identity Profile\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Notification Publisher\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Enable Username Recovery\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Login Template\",\n        \"value\": \"html.form.login.template.html\"\n      },\n      {\n        \"name\": \"Logout Path\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Logout Redirect\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Logout Template\",\n        \"value\": \"idp.logout.success.page.template.html\"\n      },\n      {\n        \"name\": \"Change Password Template\",\n        \"value\": \"html.form.change.password.template.html\"\n      },\n      {\n        \"name\": \"Change Password Message Template\",\n        \"value\": \"html.form.message.template.html\"\n      },\n      {\n        \"name\": \"Password Management System Message Template\",\n        \"value\": \"html.form.message.template.html\"\n      },\n      {\n        \"name\": \"Change Password Email Template\",\n        \"value\": \"message-template-end-user-password-change.html\"\n      },\n      {\n        \"name\": \"Expiring Password Warning Template\",\n        \"value\": \"html.form.password.expiring.notification.template.html\"\n      },\n      {\n        \"name\": \"Threshold for Expiring Password Warning\",\n        \"value\": \"7\"\n      },\n      {\n        \"name\": \"Snooze Interval for Expiring Password Warning\",\n        \"value\": \"24\"\n      },\n      {\n        \"name\": \"Login Challenge Template\",\n        \"value\": \"html.form.login.challenge.template.html\"\n      },\n      {\n        \"name\": \"'Remember My Username' Lifetime\",\n        \"value\": \"30\"\n      },\n      {\n        \"name\": \"'This is My Device' Lifetime\",\n        \"value\": \"30\"\n      },\n      {\n        \"name\": \"Allow Username Edits During Chaining\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Track Authentication Time\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Post-Password Change Re-Authentication Delay\",\n        \"value\": \"0\"\n      },\n      {\n        \"name\": \"Password Reset Username Template\",\n        \"value\": \"forgot-password.html\"\n      },\n      {\n        \"name\": \"Password Reset Code Template\",\n        \"value\": \"forgot-password-resume.html\"\n      },\n      {\n        \"name\": \"Password Reset Template\",\n        \"value\": \"forgot-password-change.html\"\n      },\n      {\n        \"name\": \"Password Reset Error Template\",\n        \"value\": \"forgot-password-error.html\"\n      },\n      {\n        \"name\": \"Password Reset Success Template\",\n        \"value\": \"forgot-password-success.html\"\n      },\n      {\n        \"name\": \"Account Unlock Template\",\n        \"value\": \"account-unlock.html\"\n      },\n      {\n        \"name\": \"OTP Length\",\n        \"value\": \"8\"\n      },\n      {\n        \"name\": \"OTP Time to Live\",\n        \"value\": \"10\"\n      },\n      {\n        \"name\": \"PingID Properties\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Require Verified Email\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Username Recovery Template\",\n        \"value\": \"username.recovery.template.html\"\n      },\n      {\n        \"name\": \"Username Recovery Info Template\",\n        \"value\": \"username.recovery.info.template.html\"\n      },\n      {\n        \"name\": \"Username Recovery Email Template\",\n        \"value\": \"message-template-username-recovery.html\"\n      },\n      {\n        \"name\": \"CAPTCHA for Authentication\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"CAPTCHA for Password change\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"CAPTCHA for Password Reset\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"CAPTCHA for Username recovery\",\n        \"value\": \"false\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"policy.action\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"username\",\n        \"masked\": false,\n        \"pseudonym\": true\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"entryUUID\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"uid\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"mail\",\n        \"masked\": false,\n        \"pseudonym\": false\n      }\n    ],\n    \"maskOgnlValues\": false\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [],\n    \"attributeContractFulfillment\": {\n      \"entryUUID\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"entryUUID\"\n      },\n      \"uid\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"uid\"\n      },\n      \"mail\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"mail\"\n      },\n      \"policy.action\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"policy.action\"\n      },\n      \"username\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"username\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": []\n    }\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=dri1564003022949.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "51037225-f13a-4f71-8e37-6a3a5aa7824e",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "4dd36f7e-aa53-48f6-bea4-507c51ef654b",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "9499b520-2227-4c8f-8f7d-d7a46c513fd4",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Social Login Adapters",
              "item": [
                {
                  "name": "Create Adapter - Google",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                        "exec": [
                          "pm.test(\"Adapter Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3fc1545c-9d1e-4561-aa04-fb8ace49420d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"Google\",\n  \"name\": \"Google\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.adapter.idp.google.GoogleAuthenticationAdapter\"\n  },\n  \"configuration\": {\n    \"tables\": [],\n    \"fields\": [\n      {\n        \"name\": \"Attribute Retrieval\",\n        \"value\": \"0\"\n      },\n      {\n        \"name\": \"Client ID\",\n        \"value\": \"{{googleAppId}}\"\n      },\n      {\n        \"name\": \"Client Secret\",\n\t\t\"value\": \"{{googleAppSecret}}\"\n      },\n      {\n        \"name\": \"Refresh Token\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Error Redirect URL\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Unauthorized Redirect URL\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Callback Endpoint\",\n        \"value\": \"/google-authn\"\n      },\n      {\n        \"name\": \"PingFederate Base URL\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Authentication URL\",\n        \"value\": \"https://accounts.google.com/o/oauth2/auth\"\n      },\n      {\n        \"name\": \"Access Token URL\",\n        \"value\": \"https://accounts.google.com/o/oauth2/token\"\n      },\n      {\n        \"name\": \"Logout URL\",\n        \"value\": \"https://accounts.google.com/Logout?hl=en\"\n      },\n      {\n        \"name\": \"User Info URL\",\n        \"value\": \"https://openidconnect.googleapis.com/v1/userinfo\"\n      },\n      {\n        \"name\": \"Extended Profile Data URL\",\n        \"value\": \"https://www.googleapis.com/admin/directory/v1/users\"\n      },\n      {\n        \"name\": \"Group Request\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Extended Profile Group URL\",\n        \"value\": \"https://www.googleapis.com/admin/directory/v1/groups?userKey=\"\n      },\n      {\n        \"name\": \"Certificate URL\",\n        \"value\": \"https://www.googleapis.com/oauth2/v3/certs\"\n      },\n      {\n        \"name\": \"Retry Request\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Maximum Retries Limit\",\n        \"value\": \"5\"\n      },\n      {\n        \"name\": \"Retry Error Codes\",\n        \"value\": \"403,503\"\n      },\n      {\n        \"name\": \"Require Form Adapter Cancellation\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Read Timeout\",\n        \"value\": \"10000\"\n      },\n      {\n        \"name\": \"Connection Timeout\",\n        \"value\": \"10000\"\n      },\n      {\n        \"name\": \"Proxy Settings\",\n        \"value\": \"System Defaults\"\n      },\n      {\n        \"name\": \"Custom Proxy Host\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Custom Proxy Port\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"email\",\n        \"masked\": false,\n        \"pseudonym\": true\n      }\n    ],\n    \"extendedAttributes\": [],\n    \"maskOgnlValues\": false\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [],\n    \"attributeContractFulfillment\": {\n      \"email\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"email\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": []\n    }\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters",
                    "description": "https://docs.pingidentity.com/bundle/integrations/page/deo1563995015832.html"
                  },
                  "response": []
                },
                {
                  "name": "Create Adapter - Facebook",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                        "exec": [
                          "pm.test(\"Adapter Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "cd8ac441-b5e0-4191-baf1-e7aaf1452d6e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"Facebook\",\n  \"name\": \"Facebook\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.adapters.idp.facebook.FacebookAuthenticationAdapter\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"Scope Permissions\",\n        \"rows\": []\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"Application ID\",\n        \"value\": \"{{fbAppId}}\"\n      },\n      {\n        \"name\": \"Application Secret\",\n        \"value\": \"{{fbAppSecret}}\"\n      },\n      {\n        \"name\": \"Site URL\",\n        \"value\": \"{{pfBaseURL}}/ext/facebook-authn\"\n      },\n      {\n        \"name\": \"Error Redirect URL\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Logout URL\",\n        \"value\": \"https://www.facebook.com/logout.php\"\n      },\n      {\n        \"name\": \"Unauthorized Redirect URL\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Facebook Authentication URL\",\n        \"value\": \"https://www.facebook.com/dialog/oauth\"\n      },\n      {\n        \"name\": \"Facebook Access Token URL\",\n        \"value\": \"https://graph.facebook.com/oauth/access_token\"\n      },\n      {\n        \"name\": \"Facebook User Data URL\",\n        \"value\": \"https://graph.facebook.com/me\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"updated_time\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"gender\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"timezone\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"link\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"verified\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"last_name\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"locale\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"token_expires\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"picture\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"access_token\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"cover\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"age_range\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"name\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"id\",\n        \"masked\": false,\n        \"pseudonym\": true\n      },\n      {\n        \"name\": \"first_name\",\n        \"masked\": false,\n        \"pseudonym\": false\n      }\n    ],\n    \"extendedAttributes\": [],\n    \"maskOgnlValues\": false\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [],\n    \"attributeContractFulfillment\": {\n      \"updated_time\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"updated_time\"\n      },\n      \"gender\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"gender\"\n      },\n      \"timezone\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"timezone\"\n      },\n      \"link\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"link\"\n      },\n      \"verified\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"verified\"\n      },\n      \"last_name\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"last_name\"\n      },\n      \"locale\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"locale\"\n      },\n      \"token_expires\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"token_expires\"\n      },\n      \"picture\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"picture\"\n      },\n      \"access_token\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"access_token\"\n      },\n      \"age_range\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"age_range\"\n      },\n      \"cover\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"cover\"\n      },\n      \"name\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"name\"\n      },\n      \"id\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"id\"\n      },\n      \"first_name\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"first_name\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": []\n    }\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters",
                    "description": "https://docs.pingidentity.com/bundle/integrations/page/bza1563995011780.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "18883d1e-0d8d-4aa3-a5f3-2d97fc7ee647",
              "description": "Adds the following Social Adapters (i.e. those that just need config variables):\n\n* Facebook\n* Google\n\nThese are added to the Local Identity Profile and AuthN Policies",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Adapter - Identifier First",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                    "exec": [
                      "pm.test(\"Adapter Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "9abc2033-7684-4658-abd9-f6548b7b014e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "PingFederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"IDFirst\",\n  \"name\": \"ID-First\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.adapters.identifierfirst.idp.IdentifierFirstAdapter\"\n  },\n  \"configuration\": {\n    \"tables\": [],\n    \"fields\": [\n      {\n        \"name\": \"Identifier Cookie Lifetime\",\n        \"value\": \"30\"\n      },\n      {\n        \"name\": \"Allow Cancelling Identifier Selection\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Maximum Identifiers Count\",\n        \"value\": \"5\"\n      },\n      {\n        \"name\": \"Identifier Selection Template\",\n        \"value\": \"identifier.first.template.html\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"subject\",\n        \"masked\": false,\n        \"pseudonym\": true\n      },\n      {\n        \"name\": \"domain\",\n        \"masked\": false,\n        \"pseudonym\": false\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"entryUUID\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"uid\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"mail\",\n        \"masked\": false,\n        \"pseudonym\": false\n      }\n    ],\n    \"maskOgnlValues\": false\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"LDAP\",\n        \"dataStoreRef\": {\n          \"id\": \"LDAP-PingDirectory\"\n        },\n        \"id\": \"PD\",\n        \"description\": \"PD\",\n        \"baseDn\": \"{{userBaseDN}}\",\n        \"searchScope\": \"SUBTREE\",\n        \"searchFilter\": \"(|(uid=${subject} )(mail=$${subject}))\",\n        \"binaryAttributeSettings\": {},\n        \"memberOfNestedGroup\": false\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"entryUUID\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"PD\"\n        },\n        \"value\": \"entryUUID\"\n      },\n      \"uid\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"PD\"\n        },\n        \"value\": \"uid\"\n      },\n      \"mail\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"PD\"\n        },\n        \"value\": \"mail\"\n      },\n      \"subject\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"subject\"\n      },\n      \"domain\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"domain\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": []\n    }\n  }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=iek1564003022460.html"
              },
              "response": []
            }
          ],
          "_postman_id": "c29e3c11-d560-47e5-a9e0-15f8a5d68f2a",
          "description": "Calls that create the IdP Components:\n\n* Default Identity Profile (with Profile Management)\n* HTML Form Adapter (with Local Identity Profile and SSPR)\n* HTML Form (Used for non-Customer Facing AuthN - Delegator \\ PingCentral \\ etc)\n* PingID SDK Adapter\n* PingID SDK Connector\n* Identifier-First Adapter\n* Social Connectors\n * Facebook\n * Google\n * Apple (not configured)\n * LinkedIn (not configured)\n* 3rd Party Risk Integration Kits (not configured)\n * iOvation\n * ID Data Web\n* Authentication API Application\n * Defaults to PF API Explorer\n",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "6bfb8214-eeec-4cca-bb98-a7a692e752dd",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ce628fd7-9bae-4725-97bb-27ddbf53302a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Create CIAM AuthN Policy elements",
          "item": [
            {
              "name": "Create Extended Property Selector - AuthN API",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2eeefba3-473e-41a4-91b7-85321fd28393",
                    "exec": [
                      "pm.test(\"Extended Property Selector Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1a8dca8a-388b-438e-9736-119caf0ac06d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"authnApi\",\n    \"name\": \"AuthN API\",\n    \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.pf.selectors.ExtendedPropertyAuthnSelector\"\n    },\n    \"configuration\": {\n        \"tables\": [],\n        \"fields\": [\n            {\n                \"name\": \"Extended Property\",\n                \"value\": \"authNexp\"\n            }\n        ]\n    },\n    \"attributeContract\": {\n        \"extendedAttributes\": [\n            {\n                \"name\": \"API\"\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationSelectors",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=ndr1564002987357.html\n\nThis is needed to allow a separate AuthN Policy branch that can be AuthN API Enabled"
              },
              "response": []
            },
            {
              "name": "Create CIAM AuthN Policies",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "43c897b9-d3ca-403f-83f8-ae397e06abd4",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "7cbf9465-6740-4dd7-a6f1-89e0dbeefc48",
                    "exec": [
                      "pm.test(\"CIAM AuthN Policy Created\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "9d7ffaf6-a29a-4758-b6c7-4bf29f150fa9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "PingFederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"failIfNoSelection\": false,\n    \"authnSelectionTrees\": [\n        {\n            \"rootNode\": {\n                \"action\": {\n                    \"type\": \"AUTHN_SELECTOR\",\n                    \"authenticationSelectorRef\": {\n                        \"id\": \"authnExp\"\n                    }\n                },\n                \"children\": [\n                    {\n                        \"action\": {\n                            \"type\": \"AUTHN_SOURCE\",\n                            \"context\": \"Basic\",\n                            \"authenticationSource\": {\n                                \"type\": \"IDP_ADAPTER\",\n                                \"sourceRef\": {\n                                    \"id\": \"HTMLFormWithLIP\"\n                                }\n                            },\n                            \"attributeRules\": {\n                                \"items\": [\n                                    {\n                                        \"attributeName\": \"policy.action\",\n                                        \"condition\": \"EQUALS\",\n                                        \"expectedValue\": \"identity.registration\",\n                                        \"result\": \"Registration\"\n                                    },\n                                    {\n                                        \"attributeName\": \"policy.action\",\n                                        \"condition\": \"EQUALS\",\n                                        \"expectedValue\": \"Facebook\",\n                                        \"result\": \"Facebook\"\n                                    },\n                                    {\n                                        \"attributeName\": \"policy.action\",\n                                        \"condition\": \"EQUALS\",\n                                        \"expectedValue\": \"Google\",\n                                        \"result\": \"Google\"\n                                    },\n                                    {\n                                        \"attributeName\": \"policy.action\",\n                                        \"condition\": \"EQUALS\",\n                                        \"expectedValue\": \"QR Code\",\n                                        \"result\": \"QR Code\"\n                                    }\n                                ],\n                                \"fallbackToSuccess\": true\n                            }\n                        },\n                        \"children\": [\n                            {\n                                \"action\": {\n                                    \"type\": \"DONE\",\n                                    \"context\": \"Fail\"\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                    \"context\": \"Registration\",\n                                    \"localIdentityRef\": {\n                                        \"id\": \"defaultIdentityProfile\"\n                                    },\n                                    \"inboundMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {},\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    },\n                                    \"outboundAttributeMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"ImmutableID\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"mail\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"subject\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"username\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    }\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"AUTHN_SOURCE\",\n                                    \"context\": \"Facebook\",\n                                    \"authenticationSource\": {\n                                        \"type\": \"IDP_ADAPTER\",\n                                        \"sourceRef\": {\n                                            \"id\": \"Facebook\"\n                                        }\n                                    }\n                                },\n                                \"children\": [\n                                    {\n                                        \"action\": {\n                                            \"type\": \"DONE\",\n                                            \"context\": \"Fail\"\n                                        }\n                                    },\n                                    {\n                                        \"action\": {\n                                            \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                            \"context\": \"Success\",\n                                            \"localIdentityRef\": {\n                                                \"id\": \"defaultIdentityProfile\"\n                                            },\n                                            \"inboundMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"pf.local.identity.unique.id\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"Facebook\"\n                                                        },\n                                                        \"value\": \"id\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            },\n                                            \"outboundAttributeMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"ImmutableID\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"Facebook\"\n                                                        },\n                                                        \"value\": \"id\"\n                                                    },\n                                                    \"mail\": {\n                                                        \"source\": {\n                                                            \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                            \"id\": \"defaultIdentityProfile\"\n                                                        },\n                                                        \"value\": \"email\"\n                                                    },\n                                                    \"subject\": {\n                                                        \"source\": {\n                                                            \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                            \"id\": \"defaultIdentityProfile\"\n                                                        },\n                                                        \"value\": \"username\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            }\n                                        }\n                                    }\n                                ]\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"AUTHN_SOURCE\",\n                                    \"context\": \"Google\",\n                                    \"authenticationSource\": {\n                                        \"type\": \"IDP_ADAPTER\",\n                                        \"sourceRef\": {\n                                            \"id\": \"Google\"\n                                        }\n                                    }\n                                },\n                                \"children\": [\n                                    {\n                                        \"action\": {\n                                            \"type\": \"DONE\",\n                                            \"context\": \"Fail\"\n                                        }\n                                    },\n                                    {\n                                        \"action\": {\n                                            \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                            \"context\": \"Success\",\n                                            \"localIdentityRef\": {\n                                                \"id\": \"defaultIdentityProfile\"\n                                            },\n                                            \"inboundMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"pf.local.identity.unique.id\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"Google\"\n                                                        },\n                                                        \"value\": \"email\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            },\n                                            \"outboundAttributeMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"ImmutableID\": {\n                                                        \"source\": {\n                                                            \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                            \"id\": \"defaultIdentityProfile\"\n                                                        },\n                                                        \"value\": \"email\"\n                                                    },\n                                                    \"mail\": {\n                                                        \"source\": {\n                                                            \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                            \"id\": \"defaultIdentityProfile\"\n                                                        },\n                                                        \"value\": \"email\"\n                                                    },\n                                                    \"subject\": {\n                                                        \"source\": {\n                                                            \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                            \"id\": \"defaultIdentityProfile\"\n                                                        },\n                                                        \"value\": \"username\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            }\n                                        }\n                                    }\n                                ]\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"AUTHN_SOURCE\",\n                                    \"context\": \"QR Code\",\n                                    \"authenticationSource\": {\n                                        \"type\": \"IDP_ADAPTER\",\n                                        \"sourceRef\": {\n                                            \"id\": \"PingIDSDK\"\n                                        }\n                                    }\n                                },\n                                \"children\": [\n                                    {\n                                        \"action\": {\n                                            \"type\": \"DONE\",\n                                            \"context\": \"Fail\"\n                                        }\n                                    },\n                                    {\n                                        \"action\": {\n                                            \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                            \"context\": \"Success\",\n                                            \"localIdentityRef\": {\n                                                \"id\": \"defaultIdentityProfile\"\n                                            },\n                                            \"inboundMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"pf.local.identity.unique.id\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"PingIDSDK\"\n                                                        },\n                                                        \"value\": \"username\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            },\n                                            \"outboundAttributeMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"ImmutableID\": {\n                                                        \"source\": {\n                                                            \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                            \"id\": \"defaultIdentityProfile\"\n                                                        },\n                                                        \"value\": \"email\"\n                                                    },\n                                                    \"mail\": {\n                                                        \"source\": {\n                                                            \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                            \"id\": \"defaultIdentityProfile\"\n                                                        },\n                                                        \"value\": \"email\"\n                                                    },\n                                                    \"subject\": {\n                                                        \"source\": {\n                                                            \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                            \"id\": \"defaultIdentityProfile\"\n                                                        },\n                                                        \"value\": \"username\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            }\n                                        }\n                                    }\n                                ]\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                    \"context\": \"Success\",\n                                    \"localIdentityRef\": {\n                                        \"id\": \"defaultIdentityProfile\"\n                                    },\n                                    \"inboundMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"pf.local.identity.unique.id\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLFormWithLIP\"\n                                                },\n                                                \"value\": \"uid\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    },\n                                    \"outboundAttributeMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"ImmutableID\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLFormWithLIP\"\n                                                },\n                                                \"value\": \"entryUUID\"\n                                            },\n                                            \"mail\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLFormWithLIP\"\n                                                },\n                                                \"value\": \"mail\"\n                                            },\n                                            \"subject\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLFormWithLIP\"\n                                                },\n                                                \"value\": \"uid\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"action\": {\n                            \"type\": \"AUTHN_SOURCE\",\n                            \"context\": \"Internal\",\n                            \"authenticationSource\": {\n                                \"type\": \"IDP_ADAPTER\",\n                                \"sourceRef\": {\n                                    \"id\": \"HTMLForm\"\n                                }\n                            }\n                        },\n                        \"children\": [\n                            {\n                                \"action\": {\n                                    \"type\": \"DONE\",\n                                    \"context\": \"Fail\"\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"APC_MAPPING\",\n                                    \"context\": \"Success\",\n                                    \"authenticationPolicyContractRef\": {\n                                        \"id\": \"defaultPolicyContract\"\n                                    },\n                                    \"attributeMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"ImmutableID\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLForm\"\n                                                },\n                                                \"value\": \"entryUUID\"\n                                            },\n                                            \"mail\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLForm\"\n                                                },\n                                                \"value\": \"mail\"\n                                            },\n                                            \"subject\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"HTMLForm\"\n                                                },\n                                                \"value\": \"username\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"action\": {\n                            \"type\": \"AUTHN_SOURCE\",\n                            \"context\": \"MFA\",\n                            \"authenticationSource\": {\n                                \"type\": \"IDP_ADAPTER\",\n                                \"sourceRef\": {\n                                    \"id\": \"HTMLFormWithLIP\"\n                                }\n                            },\n                            \"attributeRules\": {\n                                \"items\": [\n                                    {\n                                        \"attributeName\": \"policy.action\",\n                                        \"condition\": \"EQUALS\",\n                                        \"expectedValue\": \"identity.registration\",\n                                        \"result\": \"Registration\"\n                                    }\n                                ],\n                                \"fallbackToSuccess\": true\n                            }\n                        },\n                        \"children\": [\n                            {\n                                \"action\": {\n                                    \"type\": \"DONE\",\n                                    \"context\": \"Fail\"\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                    \"context\": \"Registration\",\n                                    \"localIdentityRef\": {\n                                        \"id\": \"defaultIdentityProfile\"\n                                    },\n                                    \"inboundMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {},\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    },\n                                    \"outboundAttributeMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"ImmutableID\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"mail\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"subject\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"username\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    }\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"AUTHN_SOURCE\",\n                                    \"context\": \"Success\",\n                                    \"authenticationSource\": {\n                                        \"type\": \"IDP_ADAPTER\",\n                                        \"sourceRef\": {\n                                            \"id\": \"PingIDSDK\"\n                                        }\n                                    },\n                                    \"inputUserIdMapping\": {\n                                        \"source\": {\n                                            \"type\": \"ADAPTER\",\n                                            \"id\": \"HTMLFormWithLIP\"\n                                        },\n                                        \"value\": \"uid\"\n                                    }\n                                },\n                                \"children\": [\n                                    {\n                                        \"action\": {\n                                            \"type\": \"DONE\",\n                                            \"context\": \"Fail\"\n                                        }\n                                    },\n                                    {\n                                        \"action\": {\n                                            \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                            \"context\": \"Success\",\n                                            \"localIdentityRef\": {\n                                                \"id\": \"defaultIdentityProfile\"\n                                            },\n                                            \"inboundMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"pf.local.identity.unique.id\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"HTMLFormWithLIP\"\n                                                        },\n                                                        \"value\": \"uid\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            },\n                                            \"outboundAttributeMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"ImmutableID\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"HTMLFormWithLIP\"\n                                                        },\n                                                        \"value\": \"entryUUID\"\n                                                    },\n                                                    \"mail\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"HTMLFormWithLIP\"\n                                                        },\n                                                        \"value\": \"mail\"\n                                                    },\n                                                    \"subject\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"HTMLFormWithLIP\"\n                                                        },\n                                                        \"value\": \"uid\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            }\n                                        }\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"action\": {\n                            \"type\": \"AUTHN_SOURCE\",\n                            \"context\": \"Passwordless\",\n                            \"authenticationSource\": {\n                                \"type\": \"IDP_ADAPTER\",\n                                \"sourceRef\": {\n                                    \"id\": \"IDFirst\"\n                                }\n                            }\n                        },\n                        \"children\": [\n                            {\n                                \"action\": {\n                                    \"type\": \"DONE\",\n                                    \"context\": \"Fail\"\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"AUTHN_SOURCE\",\n                                    \"context\": \"Success\",\n                                    \"authenticationSource\": {\n                                        \"type\": \"IDP_ADAPTER\",\n                                        \"sourceRef\": {\n                                            \"id\": \"PingIDSDK\"\n                                        }\n                                    },\n                                    \"inputUserIdMapping\": {\n                                        \"source\": {\n                                            \"type\": \"ADAPTER\",\n                                            \"id\": \"IDFirst\"\n                                        },\n                                        \"value\": \"subject\"\n                                    }\n                                },\n                                \"children\": [\n                                    {\n                                        \"action\": {\n                                            \"type\": \"DONE\",\n                                            \"context\": \"Fail\"\n                                        }\n                                    },\n                                    {\n                                        \"action\": {\n                                            \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                            \"context\": \"Success\",\n                                            \"localIdentityRef\": {\n                                                \"id\": \"defaultIdentityProfile\"\n                                            },\n                                            \"inboundMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"pf.local.identity.unique.id\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"IDFirst\"\n                                                        },\n                                                        \"value\": \"uid\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            },\n                                            \"outboundAttributeMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"ImmutableID\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"IDFirst\"\n                                                        },\n                                                        \"value\": \"entryUUID\"\n                                                    },\n                                                    \"mail\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"IDFirst\"\n                                                        },\n                                                        \"value\": \"mail\"\n                                                    },\n                                                    \"subject\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"IDFirst\"\n                                                        },\n                                                        \"value\": \"uid\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            }\n                                        }\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"name\": \"AuthN Experience Policy\",\n            \"description\": \"This Policy uses the Extended Properties Selector to allow easy switching between:\\r\\n* Basic (HTML Form with LIP)\\r\\n* MFA (HTML Form with LIP --> PingID SDK)\\r\\n* Passwordless (ID-First + PingID SDK)\\r\\n* Internal (HTML Form)\",\n            \"enabled\": true\n        },\n        {\n            \"rootNode\": {\n                \"action\": {\n                    \"type\": \"AUTHN_SELECTOR\",\n                    \"authenticationSelectorRef\": {\n                        \"id\": \"authnApi\"\n                    }\n                },\n                \"children\": [\n                    {\n                        \"action\": {\n                            \"type\": \"AUTHN_SOURCE\",\n                            \"context\": \"API\",\n                            \"authenticationSource\": {\n                                \"type\": \"IDP_ADAPTER\",\n                                \"sourceRef\": {\n                                    \"id\": \"IDFirst\"\n                                }\n                            }\n                        },\n                        \"children\": [\n                            {\n                                \"action\": {\n                                    \"type\": \"DONE\",\n                                    \"context\": \"Fail\"\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"AUTHN_SOURCE\",\n                                    \"context\": \"Success\",\n                                    \"authenticationSource\": {\n                                        \"type\": \"IDP_ADAPTER\",\n                                        \"sourceRef\": {\n                                            \"id\": \"HTMLFormWithLIP\"\n                                        }\n                                    },\n                                    \"inputUserIdMapping\": {\n                                        \"source\": {\n                                            \"type\": \"ADAPTER\",\n                                            \"id\": \"IDFirst\"\n                                        },\n                                        \"value\": \"subject\"\n                                    }\n                                },\n                                \"children\": [\n                                    {\n                                        \"action\": {\n                                            \"type\": \"DONE\",\n                                            \"context\": \"Fail\"\n                                        }\n                                    },\n                                    {\n                                        \"action\": {\n                                            \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                            \"context\": \"Success\",\n                                            \"localIdentityRef\": {\n                                                \"id\": \"defaultIdentityProfile\"\n                                            },\n                                            \"inboundMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"pf.local.identity.unique.id\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"IDFirst\"\n                                                        },\n                                                        \"value\": \"uid\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            },\n                                            \"outboundAttributeMapping\": {\n                                                \"attributeSources\": [],\n                                                \"attributeContractFulfillment\": {\n                                                    \"ImmutableID\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"HTMLFormWithLIP\"\n                                                        },\n                                                        \"value\": \"entryUUID\"\n                                                    },\n                                                    \"mail\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"HTMLFormWithLIP\"\n                                                        },\n                                                        \"value\": \"mail\"\n                                                    },\n                                                    \"subject\": {\n                                                        \"source\": {\n                                                            \"type\": \"ADAPTER\",\n                                                            \"id\": \"HTMLFormWithLIP\"\n                                                        },\n                                                        \"value\": \"uid\"\n                                                    }\n                                                },\n                                                \"issuanceCriteria\": {\n                                                    \"conditionalCriteria\": []\n                                                }\n                                            }\n                                        }\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"name\": \"AuthN API Policy\",\n            \"description\": \"This Policy presents an AuthN API Application\",\n            \"enabled\": true,\n            \"authenticationApiApplicationRef\": {\n                \"id\": \"DefaultAuthNAPIApp\"\n            }\n        },\n        {\n            \"rootNode\": {\n                \"action\": {\n                    \"type\": \"AUTHN_SOURCE\",\n                    \"authenticationSource\": {\n                        \"type\": \"IDP_ADAPTER\",\n                        \"sourceRef\": {\n                            \"id\": \"HTMLFormWithLIP\"\n                        }\n                    },\n                    \"attributeRules\": {\n                        \"items\": [\n                            {\n                                \"attributeName\": \"policy.action\",\n                                \"condition\": \"EQUALS\",\n                                \"expectedValue\": \"QR Code\",\n                                \"result\": \"QR Code\"\n                            },\n                            {\n                                \"attributeName\": \"policy.action\",\n                                \"condition\": \"EQUALS\",\n                                \"expectedValue\": \"Facebook\",\n                                \"result\": \"Facebook\"\n                            },\n                            {\n                                \"attributeName\": \"policy.action\",\n                                \"condition\": \"EQUALS\",\n                                \"expectedValue\": \"Google\",\n                                \"result\": \"Google\"\n                            }\n                        ],\n                        \"fallbackToSuccess\": true\n                    }\n                },\n                \"children\": [\n                    {\n                        \"action\": {\n                            \"type\": \"DONE\",\n                            \"context\": \"Fail\"\n                        }\n                    },\n                    {\n                        \"action\": {\n                            \"type\": \"AUTHN_SOURCE\",\n                            \"context\": \"QR Code\",\n                            \"authenticationSource\": {\n                                \"type\": \"IDP_ADAPTER\",\n                                \"sourceRef\": {\n                                    \"id\": \"PingIDSDK\"\n                                }\n                            }\n                        },\n                        \"children\": [\n                            {\n                                \"action\": {\n                                    \"type\": \"DONE\",\n                                    \"context\": \"Fail\"\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                    \"context\": \"Success\",\n                                    \"localIdentityRef\": {\n                                        \"id\": \"defaultIdentityProfile\"\n                                    },\n                                    \"inboundMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"pf.local.identity.unique.id\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"PingIDSDK\"\n                                                },\n                                                \"value\": \"username\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    },\n                                    \"outboundAttributeMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"ImmutableID\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"mail\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"subject\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"username\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"action\": {\n                            \"type\": \"AUTHN_SOURCE\",\n                            \"context\": \"Facebook\",\n                            \"authenticationSource\": {\n                                \"type\": \"IDP_ADAPTER\",\n                                \"sourceRef\": {\n                                    \"id\": \"Facebook\"\n                                }\n                            },\n                            \"inputUserIdMapping\": {\n                                \"source\": {\n                                    \"type\": \"CONTEXT\"\n                                },\n                                \"value\": \"context.RequestedUser\"\n                            }\n                        },\n                        \"children\": [\n                            {\n                                \"action\": {\n                                    \"type\": \"DONE\",\n                                    \"context\": \"Fail\"\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                    \"context\": \"Success\",\n                                    \"localIdentityRef\": {\n                                        \"id\": \"defaultIdentityProfile\"\n                                    },\n                                    \"inboundMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"firstName\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"Facebook\"\n                                                },\n                                                \"value\": \"first_name\"\n                                            },\n                                            \"lastName\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"Facebook\"\n                                                },\n                                                \"value\": \"last_name\"\n                                            },\n                                            \"pf.local.identity.unique.id\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"Facebook\"\n                                                },\n                                                \"value\": \"id\"\n                                            },\n                                            \"fullName\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"Facebook\"\n                                                },\n                                                \"value\": \"name\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    },\n                                    \"outboundAttributeMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"ImmutableID\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"mail\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"subject\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"action\": {\n                            \"type\": \"AUTHN_SOURCE\",\n                            \"context\": \"Google\",\n                            \"authenticationSource\": {\n                                \"type\": \"IDP_ADAPTER\",\n                                \"sourceRef\": {\n                                    \"id\": \"Google\"\n                                }\n                            },\n                            \"inputUserIdMapping\": {\n                                \"source\": {\n                                    \"type\": \"CONTEXT\"\n                                },\n                                \"value\": \"context.RequestedUser\"\n                            }\n                        },\n                        \"children\": [\n                            {\n                                \"action\": {\n                                    \"type\": \"DONE\",\n                                    \"context\": \"Fail\"\n                                }\n                            },\n                            {\n                                \"action\": {\n                                    \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                                    \"context\": \"Success\",\n                                    \"localIdentityRef\": {\n                                        \"id\": \"defaultIdentityProfile\"\n                                    },\n                                    \"inboundMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"pf.local.identity.unique.id\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"Google\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"email\": {\n                                                \"source\": {\n                                                    \"type\": \"ADAPTER\",\n                                                    \"id\": \"Google\"\n                                                },\n                                                \"value\": \"email\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    },\n                                    \"outboundAttributeMapping\": {\n                                        \"attributeSources\": [],\n                                        \"attributeContractFulfillment\": {\n                                            \"ImmutableID\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"mail\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"email\"\n                                            },\n                                            \"subject\": {\n                                                \"source\": {\n                                                    \"type\": \"LOCAL_IDENTITY_PROFILE\",\n                                                    \"id\": \"defaultIdentityProfile\"\n                                                },\n                                                \"value\": \"username\"\n                                            }\n                                        },\n                                        \"issuanceCriteria\": {\n                                            \"conditionalCriteria\": []\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"action\": {\n                            \"type\": \"LOCAL_IDENTITY_MAPPING\",\n                            \"context\": \"Success\",\n                            \"localIdentityRef\": {\n                                \"id\": \"defaultIdentityProfile\"\n                            },\n                            \"inboundMapping\": {\n                                \"attributeSources\": [],\n                                \"attributeContractFulfillment\": {\n                                    \"pf.local.identity.unique.id\": {\n                                        \"source\": {\n                                            \"type\": \"ADAPTER\",\n                                            \"id\": \"HTMLFormWithLIP\"\n                                        },\n                                        \"value\": \"uid\"\n                                    }\n                                },\n                                \"issuanceCriteria\": {\n                                    \"conditionalCriteria\": []\n                                }\n                            },\n                            \"outboundAttributeMapping\": {\n                                \"attributeSources\": [],\n                                \"attributeContractFulfillment\": {\n                                    \"ImmutableID\": {\n                                        \"source\": {\n                                            \"type\": \"ADAPTER\",\n                                            \"id\": \"HTMLFormWithLIP\"\n                                        },\n                                        \"value\": \"entryUUID\"\n                                    },\n                                    \"mail\": {\n                                        \"source\": {\n                                            \"type\": \"ADAPTER\",\n                                            \"id\": \"HTMLFormWithLIP\"\n                                        },\n                                        \"value\": \"mail\"\n                                    },\n                                    \"subject\": {\n                                        \"source\": {\n                                            \"type\": \"ADAPTER\",\n                                            \"id\": \"HTMLFormWithLIP\"\n                                        },\n                                        \"value\": \"uid\"\n                                    }\n                                },\n                                \"issuanceCriteria\": {\n                                    \"conditionalCriteria\": []\n                                }\n                            }\n                        }\n                    }\n                ]\n            },\n            \"name\": \"Fallback Policy\",\n            \"description\": \"Policy that is invoked by events that do not use the Extended Properties (e.g. Profile Management)\",\n            \"enabled\": true\n        },\n        {\n            \"rootNode\": {\n                \"action\": {\n                    \"type\": \"AUTHN_SOURCE\",\n                    \"authenticationSource\": {\n                        \"type\": \"IDP_ADAPTER\",\n                        \"sourceRef\": {\n                            \"id\": \"PingIDSDK\"\n                        }\n                    },\n                    \"inputUserIdMapping\": {\n                        \"source\": {\n                            \"type\": \"CONTEXT\"\n                        },\n                        \"value\": \"context.RequestedUser\"\n                    }\n                },\n                \"children\": [\n                    {\n                        \"action\": {\n                            \"type\": \"DONE\",\n                            \"context\": \"Fail\"\n                        }\n                    },\n                    {\n                        \"action\": {\n                            \"type\": \"APC_MAPPING\",\n                            \"context\": \"Success\",\n                            \"authenticationPolicyContractRef\": {\n                                \"id\": \"forgotPassword\"\n                            },\n                            \"attributeMapping\": {\n                                \"attributeSources\": [],\n                                \"attributeContractFulfillment\": {\n                                    \"entryUUID\": {\n                                        \"source\": {\n                                            \"type\": \"NO_MAPPING\"\n                                        }\n                                    },\n                                    \"mail\": {\n                                        \"source\": {\n                                            \"type\": \"NO_MAPPING\"\n                                        }\n                                    },\n                                    \"subject\": {\n                                        \"source\": {\n                                            \"type\": \"ADAPTER\",\n                                            \"id\": \"PingIDSDK\"\n                                        },\n                                        \"value\": \"username\"\n                                    }\n                                },\n                                \"issuanceCriteria\": {\n                                    \"conditionalCriteria\": []\n                                }\n                            }\n                        }\n                    }\n                ]\n            },\n            \"name\": \"Forgot Password\",\n            \"description\": \"Policy Used to allow PID SDK to be used for SSPR\",\n            \"enabled\": true\n        }\n    ],\n    \"defaultAuthenticationSources\": [],\n    \"trackedHttpParameters\": [ \"payload\" ]\n}",
                  "options": {}
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationPolicies/default",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=qmq1564002987890.html"
              },
              "response": []
            },
            {
              "name": "Add PingIDSDK Override",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "eb041198-282f-4559-af0e-d81f1c1abc69",
                    "exec": [
                      "pm.test(\"PingID Session Override Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "8e1a50c6-17e6-4dd9-96b8-ccdfc46c534e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "    {\n      \"id\": \"PingIDSDKSessionOverride\",\n      \"authenticationSource\": {\n        \"type\": \"IDP_ADAPTER\",\n        \"sourceRef\": {\n          \"id\": \"PingIDSDK\"\n        }\n      },\n      \"enableSessions\": false,\n      \"persistent\": false,\n      \"timeoutDisplayUnit\": \"MINUTES\",\n      \"authnContextSensitive\": false\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/session/authenticationSessionPolicies",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=pqn1564002990312.html\n\nOverrides Global Session for PingID SDK Adapter"
              },
              "response": []
            }
          ],
          "_postman_id": "72240c93-4f14-447b-b5ed-458aed79eb3b",
          "description": "These calls are used to modify the AuthN Policies from PF-Base:\n\n\n* Default AuthN Experiences (Extended Property Selector)\n * `Basic` -- HTML Form with LIP (with Identity Registration)\n * `MFA` -- HTML Form with LIP --> PingID SDK\n * `Passwordless` -- ID-First --> PingID SDK\n* Default AuthN API (Extended Properties Selector)\n * Authentication API enabled\n * `API` -- ID-First --> HTML Form with LIP \n * Fallback Policy\n* Used to catch anything without a Ext Prop (like Profile Management)\n * HTML Form with LIP\n* Forgot Password\n * Allows SSPR to use the PID SDK Adapter \n\n\n\n",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "19b7ee7b-6ecb-49f8-9475-d456e927bf13",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "523fb9c6-a6c8-4aba-889f-bcf4addbae8c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "8694a1a5-d87e-41f9-b032-e98ec98776ad",
      "description": "These calls are intended to layer onto PF-Base and make the following changes:\n\n* Check that PID SDK Adapter is installed\n* Add CIAM Adapters\n* Create CIAM Authentication Policies\n\n**Note:** Since this is using PingIDSDK, you will need to have created an SDK Application in PingOne, and downloaded the PingIDSDK Properties file.  \n\nYou can copy the properties into the Postman environment and this collection will handle parsing \\ encoding for the appropriate calls.",
      "auth": {
        "type": "basic",
        "basic": {
          "password": "{{pfAdminPwd}}",
          "username": "{{pfAdmin}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "6e50a7b3-759e-49b4-a1b8-0976b0f79739",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "cb7a6f07-78b5-45ea-ae0b-91d3e4f2ecc4",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "PF - Add Sample Apps",
      "item": [
        {
          "name": "Create SP Connections",
          "item": [
            {
              "name": "Add SP Connection",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1dcbdc33-6fe7-4b12-a87c-333eb87390d6",
                    "exec": [
                      "pm.test(\"SAML SP Connection Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "a4f2c2f9-7f9d-4eef-9241-992363437d34",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"id\": \"Dummy-SAML\",\n    \"type\": \"SP\",\n    \"name\": \"Dummy SAML (HTTPBIN)\",\n    \"entityId\": \"Dummy-SAML\",\n\t\"applicationName\": \"Dummy-SAML\",\n    \"active\": true,\n    \"contactInfo\": {},\n    \"loggingMode\": \"STANDARD\",\n    \"virtualEntityIds\": [],\n    \"licenseConnectionGroup\": \"\",\n    \"credentials\": {\n        \"certs\": [],\n        \"signingSettings\": {\n            \"signingKeyPairRef\": {\n                \"id\": \"signing-cert\"\n            },\n            \"includeCertInSignature\": false,\n            \"includeRawKeyInSignature\": false,\n            \"algorithm\": \"SHA256withRSA\"\n        }\n    },\n    \"extendedProperties\": {\n\t\t\"authNexp\": {\n    \t\t\"values\": [\n        \t\t\"Basic\"\n        ]\n      }\n    },\n    \"spBrowserSso\": {\n        \"protocol\": \"SAML20\",\n        \"enabledProfiles\": [\n            \"IDP_INITIATED_SSO\"\n        ],\n        \"ssoServiceEndpoints\": [\n            {\n                \"binding\": \"POST\",\n                \"url\": \"https://httpbin.org/anything\",\n                \"isDefault\": true,\n                \"index\": 0\n            }\n        ],\n        \"signAssertions\": false,\n        \"signResponseAsRequired\": true,\n        \"spSamlIdentityMapping\": \"STANDARD\",\n        \"requireSignedAuthnRequests\": false,\n        \"assertionLifetime\": {\n            \"minutesBefore\": 5,\n            \"minutesAfter\": 5\n        },\n        \"encryptionPolicy\": {\n            \"encryptAssertion\": false,\n            \"encryptSloSubjectNameId\": false,\n            \"sloSubjectNameIDEncrypted\": false,\n            \"encryptedAttributes\": []\n        },\n        \"attributeContract\": {\n            \"coreAttributes\": [\n                {\n                    \"name\": \"SAML_SUBJECT\",\n                    \"nameFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"\n                }\n            ],\n            \"extendedAttributes\": []\n        },\n        \"adapterMappings\": [],\n        \"authenticationPolicyContractAssertionMappings\": [\n            {\n                \"attributeSources\": [],\n                \"attributeContractFulfillment\": {\n                    \"SAML_SUBJECT\": {\n                        \"source\": {\n                            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n                        },\n                        \"value\": \"subject\"\n                    }\n                },\n                \"issuanceCriteria\": {\n                    \"conditionalCriteria\": []\n                },\n                \"authenticationPolicyContractRef\": {\n                    \"id\": \"defaultPolicyContract\"\n                },\n                \"restrictVirtualEntityIds\": false,\n                \"restrictedVirtualEntityIds\": [],\n                \"abortSsoTransactionAsFailSafe\": false\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/spConnections",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=ikr1564002999528.html\n\nDummy SP Connection -- sends you to https://httpbin.org/anything"
              },
              "response": []
            }
          ],
          "_postman_id": "6f72560a-a064-42d5-a311-9e2d6ddd0a1b",
          "description": "Create SP Connection that does an Authentication --> SAML Assertion to https://httpsbin.org/anything ",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "83848c83-bab4-4950-9ffa-5fb9f3a5892c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "eeac56a3-1078-45c3-88c5-aa2878bd6910",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Create OIDC Clients",
          "item": [
            {
              "name": "Create OIDC Client (PingLogon)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "41847d1c-9c1e-4b88-b671-c997621406f0",
                    "exec": [
                      "pm.test(\"OIDC Client Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b95e7c94-b8e8-41b1-8a28-567472f352ec",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n      \"clientId\": \"PingLogon\",\n      \"enabled\": true,\n      \"redirectUris\": [\n        \"https://httpbin.org/anything\"\n      ],\n      \"grantTypes\": [\n        \"IMPLICIT\",\n        \"AUTHORIZATION_CODE\"\n      ],\n      \"name\": \"Ping Logon\",\n      \"description\": \"This client is used to perform OIDC logons\",\n      \"logoUrl\": \"\",\n      \"refreshRolling\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationTime\": 0,\n      \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n      \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n      \"persistentGrantIdleTimeout\": 0,\n      \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n      \"bypassApprovalPage\": true,\n      \"restrictScopes\": false,\n      \"restrictedScopes\": [],\n      \"exclusiveScopes\": [\n      ],\n      \"restrictedResponseTypes\": [],\n      \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n      },\n      \"validateUsingAllEligibleAtms\": false,\n      \"oidcPolicy\": {\n        \"policyGroup\": {\n          \"id\": \"OIDCPolicyDefault\"\n        },\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false,\n        \"pairwiseIdentifierUserType\": false\n      },\n      \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"{{globalPwd}}\",\n        \"enforceReplayPrevention\": false\n      },\n      \"extendedParameters\": {\n    \t\"authNexp\": {\n        \t\"values\": [\n        \t\t\"Basic\"\n          ]\n        }\n      },\n      \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n      \"requireProofKeyForCodeExchange\": false,\n      \"requireSignedRequests\": false\n    }",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/clients",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=roj1564002966901.html\n\nThis client can be used to demonstrate OIDC User AuthN (Authz Code \\ Implicit) flows"
              },
              "response": []
            },
            {
              "name": "Create OIDC Client (PIDSDKApp)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "774b44d9-ec82-4160-bf78-acd68a2e5b7a",
                    "exec": [
                      "pm.test(\"OIDC Client Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "2364ed7f-3c58-4021-ad33-233a11c92d96",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n      \"clientId\": \"PingIDSDKApp\",\n      \"enabled\": true,\n      \"redirectUris\": [\n        \"com.pingidentity.developer.appauth://oidc_callback\"\n      ],\n      \"grantTypes\": [\n        \"IMPLICIT\",\n        \"AUTHORIZATION_CODE\"\n      ],\n      \"name\": \"PingID SDK App\",\n      \"description\": \"This client is used to perform OIDC logons with the PingID SDK App\",\n      \"logoUrl\": \"\",\n      \"refreshRolling\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationTime\": 0,\n      \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n      \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n      \"persistentGrantIdleTimeout\": 0,\n      \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n      \"bypassApprovalPage\": true,\n      \"restrictScopes\": false,\n      \"restrictedScopes\": [],\n      \"exclusiveScopes\": [\n      ],\n      \"restrictedResponseTypes\": [],\n      \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n      },\n      \"validateUsingAllEligibleAtms\": false,\n      \"oidcPolicy\": {\n        \"policyGroup\": {\n          \"id\": \"OIDCPolicyDefault\"\n        },\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false,\n        \"pairwiseIdentifierUserType\": false\n      },\n      \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"{{globalPwd}}\",\n        \"enforceReplayPrevention\": false\n      },\n      \"extendedParameters\": {\n    \t\"authNexp\": {\n        \t\"values\": [\n        \t\t\"Basic\"\n          ]\n        }\n      },\n      \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n      \"requireProofKeyForCodeExchange\": false,\n      \"requireSignedRequests\": false\n    }",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/clients",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=roj1564002966901.html\n\nThis client can be used to issue tokens for a PingID SDK Mobile App"
              },
              "response": []
            },
            {
              "name": "Create OIDC Client (PingServices)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "41847d1c-9c1e-4b88-b671-c997621406f0",
                    "exec": [
                      "pm.test(\"OAuth Client Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "4082b1ed-4f92-4edf-8693-16e449417827",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"clientId\": \"PingServices\",\n    \"enabled\": true,\n    \"redirectUris\": [],\n    \"grantTypes\": [\n        \"CLIENT_CREDENTIALS\"\n    ],\n    \"name\": \"Ping Services\",\n    \"description\": \"This client is used by Services to ask for API Tokens (Client_Credentials)\",\n    \"refreshRolling\": \"SERVER_DEFAULT\",\n    \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n    \"persistentGrantExpirationTime\": 0,\n    \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n    \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n    \"persistentGrantIdleTimeout\": 0,\n    \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n    \"bypassApprovalPage\": true,\n    \"restrictScopes\": false,\n    \"restrictedScopes\": [],\n    \"exclusiveScopes\": [],\n    \"restrictedResponseTypes\": [],\n    \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n    },\n    \"validateUsingAllEligibleAtms\": false,\n    \"oidcPolicy\": {\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false,\n        \"pairwiseIdentifierUserType\": false\n    },\n    \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"{{globalPwd}}\",\n        \"enforceReplayPrevention\": false\n    },\n    \"extendedParameters\": {\n        \"authNexp\": {}\n    },\n    \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n    \"requireProofKeyForCodeExchange\": false,\n    \"requireSignedRequests\": false\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/clients",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=roj1564002966901.html\n\nThis client can be used to Introspect `access_token`"
              },
              "response": []
            },
            {
              "name": "Create OIDC Client (PingIntrospect)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "357f9987-ab1f-4e11-aea5-059c0dc4de65",
                    "exec": [
                      "pm.test(\"OAuth Client Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1440b5e8-cda8-4826-9a4a-e6e91c0a16e0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n      \"clientId\": \"PingIntrospect\",\n      \"enabled\": true,\n      \"redirectUris\": [],\n      \"grantTypes\": [\n        \"ACCESS_TOKEN_VALIDATION\"\n      ],\n      \"name\": \"Ping Introspect\",\n      \"description\": \"This client is used to Introspect and validate PF-issued access_tokens\",\n      \"logoUrl\": \"\",\n      \"refreshRolling\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationTime\": 0,\n      \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n      \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n      \"persistentGrantIdleTimeout\": 0,\n      \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n      \"bypassApprovalPage\": false,\n      \"restrictScopes\": false,\n      \"restrictedScopes\": [],\n      \"exclusiveScopes\": [],\n      \"restrictedResponseTypes\": [],\n      \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n      },\n      \"validateUsingAllEligibleAtms\": true,\n      \"oidcPolicy\": {\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false\n      },\n      \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"2FederateM0re\",\n        \"enforceReplayPrevention\": false\n      },\n      \"extendedParameters\": {},\n      \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n      \"requireSignedRequests\": false\n    }",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/clients"
              },
              "response": []
            }
          ],
          "_postman_id": "e7102c3a-087a-4cac-93d1-e0820091ec49",
          "description": "Create 2 OIDC Clients\n\n* PingLogon\n * AuthZ Code \\ Implicit\n* PingIntrospect\n * Introspection client",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "1e8c4e55-382d-471c-aef0-acf32c8cab30",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "bfb74f10-a329-4acc-9046-17a16a77eaa3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Test Use Cases",
          "item": [
            {
              "name": "Test SAML Connection (Basic)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d23267c-44f2-45ac-9e86-c538560e2537",
                    "exec": [
                      "const $ = cheerio.load(responseBody);",
                      "",
                      "pm.test(\"SAML Assertion created: \\n\", function () {",
                      "    pm.response.to.be.ok;",
                      "    pm.expect($(\"input[name='SAMLResponse']\").val()).to.not.be.empty;",
                      "    console.log(\"SAML Assertion was created\", atob($(\"input[name='SAMLResponse']\").val()));",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "8b367430-453a-4fbb-98da-18a63c455749",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/x-www-form-urlencoded",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "pf.username",
                      "value": "user.0",
                      "type": "text"
                    },
                    {
                      "key": "pf.pass",
                      "value": "2FederateM0re",
                      "type": "text"
                    }
                  ],
                  "options": {
                    "urlencoded": {}
                  }
                },
                "url": {
                  "raw": "{{pfBaseURL}}/idp/startSSO.ping?PartnerSpId=Dummy-SAML",
                  "host": [
                    "{{pfBaseURL}}"
                  ],
                  "path": [
                    "idp",
                    "startSSO.ping"
                  ],
                  "query": [
                    {
                      "key": "PartnerSpId",
                      "value": "Dummy-SAML"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Test OIDC Token request",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc6b5143-869c-4bb1-b81e-e5d4a03511ea",
                    "exec": [
                      "pm.test(\"OIDC AuthZ Code returned\", function () {",
                      "    pm.response.to.have.status(302);",
                      "    var loc = pm.response.headers.get(\"location\").split(\"=\");",
                      "    var authzCode = loc[1];",
                      "",
                      "    // Parse out the Code value",
                      "    pm.environment.set(\"authzCode\", authzCode);",
                      "    console.log(\"AuthZ Code:\", authzCode);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "a58ff7f2-f696-4909-8969-5620b3d40fef",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/x-www-form-urlencoded",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "pf.username",
                      "value": "user.0",
                      "type": "text"
                    },
                    {
                      "key": "pf.pass",
                      "value": "2FederateM0re",
                      "type": "text"
                    }
                  ],
                  "options": {
                    "urlencoded": {}
                  }
                },
                "url": {
                  "raw": "{{pfBaseURL}}/as/authorization.oauth2?response_type=code&client_id=PingLogon&redirect_uri=https://httpbin.org/anything&scope=openid profile",
                  "host": [
                    "{{pfBaseURL}}"
                  ],
                  "path": [
                    "as",
                    "authorization.oauth2"
                  ],
                  "query": [
                    {
                      "key": "response_type",
                      "value": "code"
                    },
                    {
                      "key": "client_id",
                      "value": "PingLogon"
                    },
                    {
                      "key": "redirect_uri",
                      "value": "https://httpbin.org/anything"
                    },
                    {
                      "key": "scope",
                      "value": "openid profile"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Swap Code for Tokens",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dbee2997-28a8-42e5-ab46-915d74cada50",
                    "exec": [
                      "function parseJwt (token) {",
                      "            var base64Url = token.split('.')[1];",
                      "            var base64 = base64Url.replace('-', '+').replace('_', '/');",
                      "            return JSON.parse(atob(base64));",
                      "        }",
                      "",
                      "",
                      "pm.test(\"Tokens returned\", function () {",
                      "    ",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    pm.expect(jsonData.access_token).to.not.be.empty;",
                      "    console.log(\"Access Token: \", parseJwt(jsonData.access_token));",
                      "    ",
                      "    console.log(\"--------------\");",
                      "    ",
                      "    pm.expect(jsonData.id_token).to.not.be.empty;",
                      "    pm.environment.set(\"id_token\", jsonData.id_token );",
                      "    console.log(\"ID Token: \", parseJwt(jsonData.id_token));",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "4fdde62b-22f9-4f88-8705-326b70e181b3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "password": "{{oauthSecret}}",
                    "username": "PingLogon"
                  }
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{pfBaseURL}}/as/token.oauth2?grant_type=authorization_code&redirect_uri=https://httpbin.org/anything&code={{authzCode}}",
                  "host": [
                    "{{pfBaseURL}}"
                  ],
                  "path": [
                    "as",
                    "token.oauth2"
                  ],
                  "query": [
                    {
                      "key": "grant_type",
                      "value": "authorization_code"
                    },
                    {
                      "key": "redirect_uri",
                      "value": "https://httpbin.org/anything"
                    },
                    {
                      "key": "code",
                      "value": "{{authzCode}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "be1e6135-78ed-47b5-b33e-8812735394fd",
          "description": "Test to see if the connections are up:\n\n* SAML Connection -- base64 encoded Assertion will be checked\n* OIDC -- Performs a OIDC Code flow and Token Swap (requires `--ignore-redirects`)\n\nNote: Minted tokens can be seen in the console log",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e359e545-c9a4-4d03-9b49-d3d5faac809b",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "5aca5b7e-abbc-4ec0-9713-40468b9cb6c0",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "09fe870d-93fd-4ec4-907f-58a854ae898b",
      "description": "Calls to generate a couple of sample applications:\n* SAML\n* OIDC",
      "auth": {
        "type": "basic",
        "basic": {
          "password": "{{pfAdminPwd}}",
          "username": "{{pfAdmin}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "7f7652fe-8870-4d85-810e-fd52c7961f08",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "eb2921ab-9cf2-439f-a887-e9e2ba07e1f6",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "PC - Initial",
      "item": [
        {
          "name": "PingDir Config",
          "item": [
            {
              "name": "Add PingCentral Users \\ Roles",
              "item": [
                {
                  "name": "Get BaseDN from PD",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b84ada5d-f877-48d8-b818-e8b18dcb4155",
                        "exec": [
                          "pm.test(\"BaseDN retrieved\", function () {",
                          "    pm.response.to.be.ok;",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0])",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5691e42e-7d5a-4209-838c-0d9b516b0b41",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": {
                        "password": "{{pdAdminPwd}}",
                        "username": "{{pdAdmin}}"
                      }
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1",
                    "description": "Gets the `userbaseDN` that was used to create the PD instance"
                  },
                  "response": []
                },
                {
                  "name": "Create Application Owner (appowner.0)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d905b59f-2e25-4b2e-844e-dd418ddd0bd9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=appowner.0,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"appowner.0\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"uid\": [ \"appowner.0\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=appowner.0\" ],\n\t\"employeeType\":[ \"Application-Owner\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Application Owner (appowner.1)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ed09f069-22b0-454a-8645-f82c3540c260",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=appowner.1,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"appowner.1\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"uid\": [ \"appowner.1\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=appowner.1\" ],\n\t\"employeeType\":[ \"Application-Owner\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Modify Administrator",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "78f59b96-4641-4c25-81d5-6402df5992c0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"employeeType\": [ \"IAM-Admin\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/uid=administrator,ou=People,{{userBaseDN}}",
                    "description": "Add PingCentral Admin to PF Admin account"
                  },
                  "response": []
                }
              ],
              "_postman_id": "6f6a0021-7063-4c63-83b7-ac34e0321d8b",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "08906177-0a70-461a-b36b-f8b22ca6c99a",
          "description": "Adds the PingCentral Roles to the User Accounts -- uses `employeeType` to store them:\n\n* `Administrator` -- `IAM-Admin`\n* `appowner.0` -- `Application-Owner`\n* `appowner.1` -- `Application-Owner`",
          "auth": {
            "type": "basic",
            "basic": {
              "password": "{{pdAdminPwd}}",
              "username": "{{pdAdmin}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "862a9eb2-804f-49fc-8033-fe129ad1313c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "24e8ea9f-8b7a-4a96-9df0-4cbbdbe0776b",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "PingFed Config",
          "item": [
            {
              "name": "Get current AS Settings",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd235f96-6f1f-4407-a764-215c3716cda8",
                    "exec": [
                      "pm.test(\"OAuth AS retrieved\", function () {",
                      "    pm.response.to.be.ok;",
                      "    ",
                      "    pm.environment.set(\"asSettings\", pm.response.json());",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "2fe5fd1d-a39a-4e85-8440-7b3c20629efe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings"
              },
              "response": []
            },
            {
              "name": "Configure AS - CORS for PingCentral",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd235f96-6f1f-4407-a764-215c3716cda8",
                    "exec": [
                      "pm.test(\"OAuth AS configured\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "5ed1069d-e529-4b9f-91eb-ad72790907b1",
                    "exec": [
                      "var asSettings = pm.environment.get(\"asSettings\");",
                      "var pingCentralHost = pm.environment.get(\"pingCentralHost\");",
                      "",
                      "//asSettings.allowedOrigins.push(\"http://\"+pingCentralHost);",
                      "asSettings.allowedOrigins.push(\"https://\"+pingCentralHost);",
                      "",
                      "pm.environment.set(\"asSettings\",JSON.stringify(asSettings));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1e523a73-0537-4677-b09c-b11a41483b94",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{asSettings}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings"
              },
              "response": []
            },
            {
              "name": "Create PingCentral OIDC Policy",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4aa206d6-cc0b-49c2-83a2-ddfdd4de1b6b",
                    "exec": [
                      "pm.test(\"OIDC Policy Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "de918c86-8efd-43c4-b1f4-2d74e85e03d4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingdfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"PingCentralPolicyDefault\",\n    \"name\": \"PingCentral OIDC Policy\",\n    \"idTokenLifetime\": 5,\n    \"attributeContract\": {\n        \"coreAttributes\": [\n            {\n                \"name\": \"sub\"\n            }\n        ],\n        \"extendedAttributes\": [\n            {\n                \"name\": \"PingCentral-Role\"\n            },\n            {\n                \"name\": \"email\"\n            },\n            {\n                \"name\": \"family_name\"\n            },\n            {\n                \"name\": \"given_name\"\n            }\n        ]\n    },\n    \"attributeMapping\": {\n        \"attributeSources\": [\n            {\n                \"type\": \"LDAP\",\n                \"dataStoreRef\": {\n                    \"id\": \"LDAP-PingDirectory\"\n                },\n                \"id\": \"PD\",\n                \"description\": \"PD\",\n                \"baseDn\": \"{{userBaseDN}}\",\n                \"searchScope\": \"SUBTREE\",\n                \"searchFilter\": \"uid=${sub}\",\n                \"binaryAttributeSettings\": {},\n                \"memberOfNestedGroup\": false\n            }\n        ],\n        \"attributeContractFulfillment\": {\n            \"sub\": {\n                \"source\": {\n                    \"type\": \"TOKEN\"\n                },\n                \"value\": \"sub\"\n            },\n            \"PingCentral-Role\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"employeeType\"\n            },\n            \"email\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"mail\"\n            },\n            \"given_name\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"givenName\"\n            },\n            \"family_name\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"sn\"\n            }\n        },\n        \"issuanceCriteria\": {\n            \"conditionalCriteria\": []\n        }\n    },\n    \"includeSriInIdToken\": false,\n    \"includeUserInfoInIdToken\": false,\n    \"includeSHashInIdToken\": false,\n    \"returnIdTokenOnRefreshGrant\": false,\n    \"accessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n    },\n    \"scopeAttributeMappings\": {}\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/openIdConnect/policies"
              },
              "response": []
            },
            {
              "name": "Create OIDC Client (PingCentral)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "41847d1c-9c1e-4b88-b671-c997621406f0",
                    "exec": [
                      "pm.test(\"OIDC Client Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "61bcef90-1fa2-40b4-a347-c9a4ec40d2fc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"clientId\": \"PingCentral\",\n    \"enabled\": true,\n    \"redirectUris\": [\n        \"https://*/login/oauth2/code/pingcentral\"\n    ],\n    \"grantTypes\": [\n        \"AUTHORIZATION_CODE\"\n    ],\n    \"name\": \"PingCentral\",\n    \"description\": \"This client is used to Authenticate to PingCentral\",\n    \"logoUrl\": \"\",\n    \"refreshRolling\": \"SERVER_DEFAULT\",\n    \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n    \"persistentGrantExpirationTime\": 0,\n    \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n    \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n    \"persistentGrantIdleTimeout\": 0,\n    \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n    \"bypassApprovalPage\": true,\n    \"restrictScopes\": false,\n    \"restrictedScopes\": [],\n    \"exclusiveScopes\": [],\n    \"restrictedResponseTypes\": [],\n    \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n    },\n    \"validateUsingAllEligibleAtms\": false,\n    \"oidcPolicy\": {\n        \"policyGroup\": {\n            \"id\": \"PingCentralPolicyDefault\"\n        },\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false,\n        \"pairwiseIdentifierUserType\": false\n    },\n    \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"{{globalPwd}}\",\n        \"enforceReplayPrevention\": false\n    },\n    \"extendedParameters\": {\n        \"authNexp\": {\n            \"values\": [\n                \"Internal\"\n            ]\n        }\n    },\n    \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n    \"requireProofKeyForCodeExchange\": false,\n    \"requireSignedRequests\": false\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/clients",
                "description": "This client can be used to issue tokens for several Ping Products (using Exclusive Scopes):\n\n* PD DirAPI (`pd:dir:access`)\n* PD Consent API (`pd:consents:unpriv` | `pd:consents:priv`)\n* PD Delegated Admin App (`urn:pingidentity:directory-delegated-admin`)\n* PF Dynamic Client Registration (`pf:client:reg`)"
              },
              "response": []
            }
          ],
          "_postman_id": "5eb45b5e-d851-4b83-b3ab-3215702628a5",
          "description": "Calls used to configure PingFed to enable SSO into PingCentral\n\n* Adds PingCentral URL to OAuth AS CORS\n* Add OIDC Client -- `PingCentral`\n * Uses the `Internal` AuthN Experience\n* Add OIDC Policy -- `PingCentral OIDC Policy`\n * Policy retrieves the `employeeType` attribute into `PingCentral-Role`\n * Retrieves User Name used in PingCentral UI",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a895c851-cb45-41a9-a646-c5b578c08826",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "bbdac462-0894-4a6e-815b-fe022484dea1",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "0db4e8ce-fc8c-4f7f-9d44-3905f984d049",
      "description": "This folder contains the calls to enable PingCentral",
      "auth": {
        "type": "basic",
        "basic": {
          "password": "{{pfAdminPwd}}",
          "username": "{{pfAdmin}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "b9eda528-9d37-44c8-a642-d0d3d831a858",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "54db94d7-3593-46fa-9aa5-984d695523fe",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "PDS - PD Destination",
      "item": [
        {
          "name": "PingDir",
          "item": [
            {
              "name": "Get BaseDN from PD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d09cdc9-438e-4bcf-b376-b97a901faec8",
                    "exec": [
                      "pm.test(\"BaseDN retrieved\", function () {",
                      "    pm.response.to.be.ok;",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0])",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "3c0cf192-1467-416c-b455-95f053eb0e91",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pdAdminUrl}}/directory/v1"
              },
              "response": []
            }
          ],
          "_postman_id": "a0f00e8d-df31-4878-803b-1765c7ac6f99",
          "auth": {
            "type": "basic",
            "basic": {
              "password": "{{pdAdminPwd}}",
              "username": "{{pdAdmin}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "b495357f-dbb4-4a50-9f66-4f49641623b3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7f691f3a-84bd-4b3d-9c4a-9843e4958335",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "PingDataSync",
          "item": [
            {
              "name": "Enable Blind Trust",
              "item": [
                {
                  "name": "Enable Blind Trust",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a8e26464-e238-4980-afd3-9e9ed02b3b8f",
                        "exec": [
                          "pm.test(\"Trust Enabled\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "791a1f45-70cc-4c95-9ed9-ab12546c9eff",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"true\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/trust-manager-providers/Blind Trust"
                  },
                  "response": []
                }
              ],
              "_postman_id": "e32e2830-d82c-472f-8e6f-c20fc52cef36",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create External Servers",
              "item": [
                {
                  "name": "Add PD as an External Server",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "feb5b3e6-becb-4a05-a4cc-f3a377c5d845",
                        "exec": [
                          "pm.test(\"Server Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "52ea020c-0e83-4b94-9439-7d3d95b38149",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-ds\"\n    ],\n    \"serverHostName\": \"pingdirectory\",\n    \"serverPort\": \"636\",\n    \"bindDN\": \"cn=sync\",\n    \"password\": \"2FederateM0re\",\n    \"connectionSecurity\": \"ssl\",\n    \"keyManagerProvider\": \"Null\",\n    \"trustManagerProvider\": \"Blind Trust\",\n    \"initialConnections\": \"1\",\n    \"maxConnections\": \"4\",\n    \"serverName\": \"pingdirectory\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/external-servers"
                  },
                  "response": []
                }
              ],
              "_postman_id": "58d1023c-ef5c-44f1-8f7e-b4fa76293fe2",
              "description": "Creates the Endpoints for PDS to connect to:\n\n* ActiveDirectory (`adDcHost`) \n* PingDirectory",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a2d1d3b2-715c-4cae-8933-be5401776083",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "2950cef2-bcaf-484b-a4a9-f0265ef3f22c",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Sync Endpoints",
              "item": [
                {
                  "name": "Add PD as Sync Destination",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1d14006-0a9b-4c31-947b-410826eb7dbf",
                        "exec": [
                          "pm.test(\"Sync Destination Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5ea6e096-4627-4868-9664-085c8ddf9522",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:sync-destination:ping-identity\"\n    ],\n    \"baseDN\": \"{{userBaseDN}}\",\n    \"requireSecureConnectionForClearTextPasswords\": \"false\",\n    \"server\": \"pingdirectory\",\n    \"destinationName\": \"PD_Destination\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/sync-destinations"
                  },
                  "response": []
                }
              ],
              "_postman_id": "9c5f0b69-9a18-4b6f-938a-0f021c34ebe8",
              "description": "Creates the Sync endpoints:\n\n* Source -- ActiveDirectory (`adBaseDN`)\n* Destination -- PingDirectory (`userBaseDN`)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "51487660-0f96-4bd2-a391-8ada069b06af",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "6f37776a-2bb8-48e6-9844-6539206a5902",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "3b3aff15-8ebb-416c-aa52-29e71ab992ca",
          "auth": {
            "type": "basic",
            "basic": {
              "password": "{{pdsAdminPwd}}",
              "username": "{{pdsAdmin}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d254f3a5-e0e1-4d53-a514-b9d32f8275ef",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7ec4198a-3f39-4169-87a7-f4608c5beaf7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "d4ccbed7-adfc-4ac8-823c-5391e2d1007a",
      "description": "Configures DataSync\n\n**DataSync**\n* Creates the PD Destination",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "af9d5302-3e83-49cb-9d8d-9ea671bd451b",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "d197636c-d4e1-4eb8-b1d8-5029ffa77b3b",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "dab7345f-7412-4c59-be7c-bb4a7db2b43b",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "272e5b51-d643-4905-a381-76eb217ea729",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "54dac890-66de-4281-b2a7-922751dea93a",
      "key": "pfAdminURL",
      "value": "https://pingfederate:9999",
      "type": "string"
    },
    {
      "id": "16b0affb-fde0-4ae1-a954-e3738668c451",
      "key": "pdAdminUrl",
      "value": "https://pingdirectory:443",
      "type": "string"
    },
    {
      "id": "823682c0-309c-48ba-856b-181bf01f8adc",
      "key": "pdsAdminURL",
      "value": "https://pingdatasync:443",
      "type": "string"
    },
    {
      "id": "d07c4623-6ce2-45f3-98f4-2c83bf4cc0e3",
      "key": "pfAdmin",
      "value": "api-admin",
      "type": "string"
    },
    {
      "id": "5403873c-56b5-492e-a303-83b31ed543c8",
      "key": "pfAdminPwd",
      "value": "{{globalPwd}}",
      "type": "string"
    },
    {
      "id": "f133b092-e6f1-4a7d-8bc3-ce24a4c662ea",
      "key": "pdAdmin",
      "value": "cn=dmanager",
      "type": "string"
    },
    {
      "id": "041e272d-22dc-43eb-bfb3-4733e8ee253c",
      "key": "pdAdminPwd",
      "value": "{{globalPwd}}",
      "type": "string"
    },
    {
      "id": "8af32e31-e000-475f-96f0-a49f1483a996",
      "key": "oauthSecret",
      "value": "{{globalPwd}}",
      "type": "string"
    },
    {
      "id": "935a2b18-feb2-41f0-b9db-5618da09f929",
      "key": "pfAuthnApiUrl",
      "value": "{{pfBaseURL}}/pf-ws/authn/explorer",
      "type": "string"
    },
    {
      "id": "440cb20f-0947-4567-b7f5-bb7fa11e2d25",
      "key": "globalPwd",
      "value": "2FederateM0re",
      "type": "string"
    },
    {
      "id": "eff538e0-2148-4e0e-951a-2867269b8507",
      "key": "googleAppID",
      "value": "YourGoogleAppID",
      "type": "string"
    },
    {
      "id": "548e7bfc-0497-4369-9ca3-1e70351bc293",
      "key": "googleAppSecret",
      "value": "YourGoogleAppSecret",
      "type": "string"
    },
    {
      "id": "07221a27-af2c-4e27-82ad-f1814e5a4da1",
      "key": "fbAppId",
      "value": "YourFBAppID",
      "type": "string"
    },
    {
      "id": "d8308fbd-c969-42d6-9535-0ebbaa92e3b6",
      "key": "fbAppSecret",
      "value": "YourFBAppSecret",
      "type": "string"
    },
    {
      "id": "fd98868a-0a73-45a7-b033-ec8c6a231bc3",
      "key": "pingCentralHost",
      "value": "https://pingcentral:9022",
      "type": "string"
    },
    {
      "id": "83567a32-e9a7-40f4-8f0a-d96d78d3dafa",
      "key": "pdsAdmin",
      "value": "cn=administrator",
      "type": "string"
    },
    {
      "id": "1edc7831-e0e3-41dd-95d6-0d5b9c35dd2c",
      "key": "pdsAdminPwd",
      "value": "{{globalPwd}}",
      "type": "string"
    }
  ]
}