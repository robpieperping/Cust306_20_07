apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f Compose/docker-compose.yaml --volumes configMap
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: pingfederate
  name: pingfederate
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pingfederate
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f Compose/docker-compose.yaml --volumes configMap
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: pingfederate
    spec:
      containers:
      - env:
        - name: PF_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: PF_LOG_LEVEL
              name: env-vars
        - name: PF_USER_PWD
          valueFrom:
            configMapKeyRef:
              key: PF_USER_PWD
              name: env-vars
        - name: PING_IDENTITY_ACCEPT_EULA
          valueFrom:
            configMapKeyRef:
              key: PING_IDENTITY_ACCEPT_EULA
              name: env-vars
        - name: USER_BASE_DN
          valueFrom:
            configMapKeyRef:
              key: USER_BASE_DN
              name: env-vars
        - name: SERVER_PROFILE_PATH
          value: pingfederate
        - name: SERVER_PROFILE_URL
          value: https://github.com/pingidentity/Customer360.git
        image: pingidentity/pingfederate:edge
        imagePullPolicy: "Always"
        name: pingfederate
        ports:
        - containerPort: 9031
        - containerPort: 9999
        resources: {}
        envFrom:
          - secretRef:
              name: devops-secret
      restartPolicy: Always
      serviceAccountName: ""
status: {}
